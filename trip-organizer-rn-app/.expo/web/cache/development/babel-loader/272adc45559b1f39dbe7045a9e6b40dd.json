{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Trip from \"../../models/trip\";\nimport { ADD_TRIP, EDIT_TRIP, GET_USER_TRIP, DELETE_TRIP, GET_TRIP_MEMBERS } from \"../actions/trips\";\nvar initialState = {\n  userTrips: [],\n  tripMembers: []\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TRIP:\n      var newTrip = new Trip(action.tripData.owner, action.tripData.name, action.tripData.destination, action.tripData.tripBeginning, action.tripData.tripEnding, action.tripData.toDoList);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userTrips: state.userTrips.concat(newTrip)\n      });\n\n    case EDIT_TRIP:\n      var tmpUserTrips = state.userTrips;\n      tmpUserTrips.forEach(function (trip, index, array) {\n        if (trip.id == action.tripData.id) {\n          array[index] = _objectSpread(_objectSpread({}, trip), {}, {\n            name: action.tripData.name,\n            destination: action.tripData.destination,\n            tripBeginning: action.tripData.tripBeginning,\n            tripEnding: action.tripData.tripEnding\n          });\n        }\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userTrips: tmpUserTrips\n      });\n\n    case GET_USER_TRIP:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userTrips: action.tripsData\n      });\n\n    case DELETE_TRIP:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userTrips: state.userTrips.filter(function (trip) {\n          return trip.id !== action.tripId;\n        })\n      });\n\n    case GET_TRIP_MEMBERS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tripMembers: action.tripMembers\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/szymongruszczynski/Documents/INZYNIERKA/repo_dir/trip-organizer/trip-organizer-rn-app/store/reducers/trips.js"],"names":["Trip","ADD_TRIP","EDIT_TRIP","GET_USER_TRIP","DELETE_TRIP","GET_TRIP_MEMBERS","initialState","userTrips","tripMembers","state","action","type","newTrip","tripData","owner","name","destination","tripBeginning","tripEnding","toDoList","concat","tmpUserTrips","forEach","trip","index","array","id","tripsData","filter","tripId"],"mappings":";;;;;;AAAA,OAAOA,IAAP;AACA,SACEC,QADF,EAEEC,SAFF,EAGEC,aAHF,EAIEC,WAJF,EAKEC,gBALF;AAQA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,WAAW,EAAE;AAFM,CAArB;AAIA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,QAAL;AACE,UAAMW,OAAO,GAAG,IAAIZ,IAAJ,CACdU,MAAM,CAACG,QAAP,CAAgBC,KADF,EAEdJ,MAAM,CAACG,QAAP,CAAgBE,IAFF,EAGdL,MAAM,CAACG,QAAP,CAAgBG,WAHF,EAIdN,MAAM,CAACG,QAAP,CAAgBI,aAJF,EAKdP,MAAM,CAACG,QAAP,CAAgBK,UALF,EAMdR,MAAM,CAACG,QAAP,CAAgBM,QANF,CAAhB;AAQA,6CACKV,KADL;AAEEF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBa,MAAhB,CAAuBR,OAAvB;AAFb;;AAIF,SAAKV,SAAL;AACE,UAAImB,YAAY,GAAGZ,KAAK,CAACF,SAAzB;AACAc,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAAUC,IAAV,EAAgBC,KAAhB,EAAuBC,KAAvB,EAA8B;AACjD,YAAIF,IAAI,CAACG,EAAL,IAAWhB,MAAM,CAACG,QAAP,CAAgBa,EAA/B,EAAmC;AACjCD,UAAAA,KAAK,CAACD,KAAD,CAAL,mCACKD,IADL;AAEER,YAAAA,IAAI,EAAEL,MAAM,CAACG,QAAP,CAAgBE,IAFxB;AAGEC,YAAAA,WAAW,EAAEN,MAAM,CAACG,QAAP,CAAgBG,WAH/B;AAIEC,YAAAA,aAAa,EAAEP,MAAM,CAACG,QAAP,CAAgBI,aAJjC;AAKEC,YAAAA,UAAU,EAAER,MAAM,CAACG,QAAP,CAAgBK;AAL9B;AAOD;AACF,OAVD;AAWA,6CACKT,KADL;AAEEF,QAAAA,SAAS,EAAEc;AAFb;;AAIF,SAAKlB,aAAL;AACE,6CACKM,KADL;AAEEF,QAAAA,SAAS,EAAEG,MAAM,CAACiB;AAFpB;;AAIF,SAAKvB,WAAL;AACE,6CACKK,KADL;AAEEF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBqB,MAAhB,CAAuB,UAACL,IAAD;AAAA,iBAAUA,IAAI,CAACG,EAAL,KAAYhB,MAAM,CAACmB,MAA7B;AAAA,SAAvB;AAFb;;AAIF,SAAKxB,gBAAL;AACE,6CACKI,KADL;AAGED,QAAAA,WAAW,EAAEE,MAAM,CAACF;AAHtB;;AAKF;AACE,aAAOC,KAAP;AAhDJ;AAkDD,CAnDD","sourcesContent":["import Trip from \"../../models/trip\";\nimport {\n  ADD_TRIP,\n  EDIT_TRIP,\n  GET_USER_TRIP,\n  DELETE_TRIP,\n  GET_TRIP_MEMBERS,\n} from \"../actions/trips\";\n\nconst initialState = {\n  userTrips: [],\n  tripMembers: [],\n};\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TRIP:\n      const newTrip = new Trip(\n        action.tripData.owner,\n        action.tripData.name,\n        action.tripData.destination,\n        action.tripData.tripBeginning,\n        action.tripData.tripEnding,\n        action.tripData.toDoList\n      );\n      return {\n        ...state,\n        userTrips: state.userTrips.concat(newTrip),\n      };\n    case EDIT_TRIP:\n      let tmpUserTrips = state.userTrips;\n      tmpUserTrips.forEach(function (trip, index, array) {\n        if (trip.id == action.tripData.id) {\n          array[index] = {\n            ...trip,\n            name: action.tripData.name,\n            destination: action.tripData.destination,\n            tripBeginning: action.tripData.tripBeginning,\n            tripEnding: action.tripData.tripEnding,\n          };\n        }\n      });\n      return {\n        ...state,\n        userTrips: tmpUserTrips,\n      };\n    case GET_USER_TRIP:\n      return {\n        ...state,\n        userTrips: action.tripsData,\n      };\n    case DELETE_TRIP:\n      return {\n        ...state,\n        userTrips: state.userTrips.filter((trip) => trip.id !== action.tripId),\n      };\n    case GET_TRIP_MEMBERS:\n      return {\n        ...state,\n        // userTrips: state.userTrips,\n        tripMembers: action.tripMembers,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/szymongruszczynski/Documents/INZYNIERKA/repo_dir/trip-organizer/trip-organizer-rn-app/node_modules/react-native-login-screen/build/dist/LoginScreen.js\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar React = tslib_1.__importStar(require(\"react\"));\n\nvar react_native_1 = require(\"react-native-web/dist/index\");\n\nvar react_native_spinkit_1 = tslib_1.__importDefault(require(\"react-native-spinkit\"));\n\nvar LoginScreen_style_1 = tslib_1.__importStar(require(\"./LoginScreen.style\"));\n\nvar BottomContainer_1 = tslib_1.__importDefault(require(\"./components/BottomContainer/BottomContainer\"));\n\nvar defaultBackground = \"https://images.unsplash.com/photo-1543637005-4d639a4e16de?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1481&q=80\";\n\nvar LoginScreen = function LoginScreen(props) {\n  var source = props.source,\n      loginText = props.loginText,\n      signupText = props.signupText,\n      spinnerType = props.spinnerType,\n      spinnerSize = props.spinnerSize,\n      spinnerColor = props.spinnerColor,\n      onPressLogin = props.onPressLogin,\n      spinnerStyle = props.spinnerStyle,\n      spinnerEnable = props.spinnerEnable,\n      onPressSignup = props.onPressSignup,\n      logoComponent = props.logoComponent,\n      spinnerVisibility = props.spinnerVisibility,\n      loginButtonTextStyle = props.loginButtonTextStyle,\n      loginButtonBackgroundColor = props.loginButtonBackgroundColor;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      cardState = _React$useState2[0],\n      setCardState = _React$useState2[1];\n\n  var renderSpinner = function renderSpinner() {\n    return React.createElement(react_native_1.View, {\n      style: LoginScreen_style_1.default.spinnerStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 34\n      }\n    }, React.createElement(react_native_spinkit_1.default, {\n      size: spinnerSize,\n      type: spinnerType,\n      style: spinnerStyle,\n      color: spinnerColor,\n      isVisible: spinnerVisibility,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  var renderLoginButton = function renderLoginButton() {\n    return React.createElement(react_native_1.TouchableOpacity, {\n      style: LoginScreen_style_1.default.loginButtonStyle,\n      onPress: onPressLogin,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 38\n      }\n    }, React.createElement(react_native_1.Text, {\n      style: loginButtonTextStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, cardState ? loginText : signupText.toUpperCase()));\n  };\n\n  return React.createElement(react_native_1.KeyboardAvoidingView, {\n    behavior: \"position\",\n    style: LoginScreen_style_1.container(loginButtonBackgroundColor),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, React.createElement(react_native_1.View, {\n    style: LoginScreen_style_1.container(loginButtonBackgroundColor),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, React.createElement(react_native_1.ImageBackground, {\n    source: source,\n    borderRadius: 24,\n    resizeMode: \"cover\",\n    style: LoginScreen_style_1.default.imageBackgroundStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(react_native_1.View, {\n    style: LoginScreen_style_1.default.blackoverlay,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, React.createElement(react_native_1.SafeAreaView, {\n    style: LoginScreen_style_1.default.safeAreaViewStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, React.createElement(react_native_1.View, {\n    style: LoginScreen_style_1.default.logoContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, logoComponent), React.createElement(BottomContainer_1.default, _extends({}, props, {\n    cardState: cardState,\n    onSignUpPress: function onSignUpPress() {\n      setCardState(!cardState);\n      onPressSignup && onPressSignup();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }))))), spinnerEnable && spinnerVisibility ? renderSpinner() : renderLoginButton()));\n};\n\nLoginScreen.defaultProps = {\n  spinnerSize: 30,\n  loginText: \"LOGIN\",\n  spinnerEnable: false,\n  spinnerColor: \"#fdfdfd\",\n  signupText: \"Sign Me Up\",\n  spinnerVisibility: false,\n  spinnerType: \"ThreeBounce\",\n  source: {\n    uri: defaultBackground\n  },\n  loginButtonBackgroundColor: \"#282828\",\n  loginButtonTextStyle: LoginScreen_style_1.default.loginButtonTextStyle\n};\nexports.default = LoginScreen;","map":{"version":3,"sources":["../../lib/LoginScreen.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_native_1 = require(\"react-native\");\nconst react_native_spinkit_1 = tslib_1.__importDefault(require(\"react-native-spinkit\"));\n/**\n * ? Local Imports\n */\nconst LoginScreen_style_1 = tslib_1.__importStar(require(\"./LoginScreen.style\"));\nconst BottomContainer_1 = tslib_1.__importDefault(require(\"./components/BottomContainer/BottomContainer\"));\nconst defaultBackground = \"https://images.unsplash.com/photo-1543637005-4d639a4e16de?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1481&q=80\";\nconst LoginScreen = (props) => {\n    const { source, loginText, signupText, spinnerType, spinnerSize, spinnerColor, onPressLogin, spinnerStyle, spinnerEnable, onPressSignup, logoComponent, spinnerVisibility, loginButtonTextStyle, loginButtonBackgroundColor, } = props;\n    const [cardState, setCardState] = React.useState(true);\n    const renderSpinner = () => (<react_native_1.View style={LoginScreen_style_1.default.spinnerStyle}>\n      <react_native_spinkit_1.default size={spinnerSize} type={spinnerType} style={spinnerStyle} color={spinnerColor} isVisible={spinnerVisibility}/>\n    </react_native_1.View>);\n    const renderLoginButton = () => (<react_native_1.TouchableOpacity style={LoginScreen_style_1.default.loginButtonStyle} onPress={onPressLogin}>\n      <react_native_1.Text style={loginButtonTextStyle}>\n        {cardState ? loginText : signupText.toUpperCase()}\n      </react_native_1.Text>\n    </react_native_1.TouchableOpacity>);\n    return (<react_native_1.KeyboardAvoidingView behavior=\"position\" style={LoginScreen_style_1.container(loginButtonBackgroundColor)}>\n      <react_native_1.View style={LoginScreen_style_1.container(loginButtonBackgroundColor)}>\n        <react_native_1.ImageBackground source={source} borderRadius={24} resizeMode=\"cover\" style={LoginScreen_style_1.default.imageBackgroundStyle}>\n          <react_native_1.View style={LoginScreen_style_1.default.blackoverlay}>\n            <react_native_1.SafeAreaView style={LoginScreen_style_1.default.safeAreaViewStyle}>\n              <react_native_1.View style={LoginScreen_style_1.default.logoContainer}>{logoComponent}</react_native_1.View>\n              <BottomContainer_1.default {...props} cardState={cardState} onSignUpPress={() => {\n        setCardState(!cardState);\n        onPressSignup && onPressSignup();\n    }}/>\n            </react_native_1.SafeAreaView>\n          </react_native_1.View>\n        </react_native_1.ImageBackground>\n        {spinnerEnable && spinnerVisibility\n        ? renderSpinner()\n        : renderLoginButton()}\n      </react_native_1.View>\n    </react_native_1.KeyboardAvoidingView>);\n};\nLoginScreen.defaultProps = {\n    spinnerSize: 30,\n    loginText: \"LOGIN\",\n    spinnerEnable: false,\n    spinnerColor: \"#fdfdfd\",\n    signupText: \"Sign Me Up\",\n    spinnerVisibility: false,\n    spinnerType: \"ThreeBounce\",\n    source: { uri: defaultBackground },\n    loginButtonBackgroundColor: \"#282828\",\n    loginButtonTextStyle: LoginScreen_style_1.default.loginButtonTextStyle,\n};\nexports.default = LoginScreen;\n//# sourceMappingURL=LoginScreen.js.map"]},"metadata":{},"sourceType":"script"}
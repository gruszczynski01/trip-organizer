{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_EVENT, EDIT_EVENT, GET_TRIP_EVENTS, DELETE_EVENT } from \"../actions/events\";\nimport Event from \"../../models/event\";\nvar initialState = {\n  tripEvents: []\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_EVENT:\n      var newEvent = new Event(action.eventData.name, action.eventData.desc, action.eventData.date, action.eventData.time, action.eventData.tripParent);\n      return {\n        tripEvents: state.tripEvents.concat(newEvent)\n      };\n\n    case EDIT_EVENT:\n      var tmpTripEvents = state.tripEvents;\n      tmpTripEvents.forEach(function (event, index, array) {\n        if (event.id == action.eventData.id) {\n          array[index] = _objectSpread(_objectSpread({}, event), {}, {\n            title: action.eventData.eventName,\n            description: action.eventData.eventDesc,\n            date: action.eventData.eventDate,\n            time: action.eventData.time\n          });\n        }\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tripEvents: tmpTripEvents\n      });\n\n    case GET_TRIP_EVENTS:\n      return {\n        tripEvents: action.tripEvents\n      };\n\n    case DELETE_EVENT:\n      return {\n        tripEvents: state.tripEvents.filter(function (event) {\n          return event.id !== action.eventId;\n        })\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/szymongruszczynski/Documents/INZYNIERKA/repo_dir/trip-organizer/trip-organizer-rn-app/store/reducers/events.js"],"names":["ADD_EVENT","EDIT_EVENT","GET_TRIP_EVENTS","DELETE_EVENT","Event","initialState","tripEvents","state","action","type","newEvent","eventData","name","desc","date","time","tripParent","concat","tmpTripEvents","forEach","event","index","array","id","title","eventName","description","eventDesc","eventDate","filter","eventId"],"mappings":";;;;;;AAAA,SACEA,SADF,EAEEC,UAFF,EAGEC,eAHF,EAIEC,YAJF;AAMA,OAAOC,KAAP;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE;AADO,CAArB;AAGA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,SAAL;AACE,UAAMU,QAAQ,GAAG,IAAIN,KAAJ,CACfI,MAAM,CAACG,SAAP,CAAiBC,IADF,EAEfJ,MAAM,CAACG,SAAP,CAAiBE,IAFF,EAGfL,MAAM,CAACG,SAAP,CAAiBG,IAHF,EAIfN,MAAM,CAACG,SAAP,CAAiBI,IAJF,EAKfP,MAAM,CAACG,SAAP,CAAiBK,UALF,CAAjB;AAOA,aAAO;AACLV,QAAAA,UAAU,EAAEC,KAAK,CAACD,UAAN,CAAiBW,MAAjB,CAAwBP,QAAxB;AADP,OAAP;;AAGF,SAAKT,UAAL;AACE,UAAIiB,aAAa,GAAGX,KAAK,CAACD,UAA1B;AACAY,MAAAA,aAAa,CAACC,OAAd,CAAsB,UAAUC,KAAV,EAAiBC,KAAjB,EAAwBC,KAAxB,EAA+B;AACnD,YAAIF,KAAK,CAACG,EAAN,IAAYf,MAAM,CAACG,SAAP,CAAiBY,EAAjC,EAAqC;AACnCD,UAAAA,KAAK,CAACD,KAAD,CAAL,mCACKD,KADL;AAEEI,YAAAA,KAAK,EAAEhB,MAAM,CAACG,SAAP,CAAiBc,SAF1B;AAGEC,YAAAA,WAAW,EAAElB,MAAM,CAACG,SAAP,CAAiBgB,SAHhC;AAIEb,YAAAA,IAAI,EAAEN,MAAM,CAACG,SAAP,CAAiBiB,SAJzB;AAKEb,YAAAA,IAAI,EAAEP,MAAM,CAACG,SAAP,CAAiBI;AALzB;AAOD;AACF,OAVD;AAWA,6CACKR,KADL;AAEED,QAAAA,UAAU,EAAEY;AAFd;;AAIF,SAAKhB,eAAL;AACE,aAAO;AACLI,QAAAA,UAAU,EAAEE,MAAM,CAACF;AADd,OAAP;;AAGF,SAAKH,YAAL;AACE,aAAO;AAELG,QAAAA,UAAU,EAAEC,KAAK,CAACD,UAAN,CAAiBuB,MAAjB,CACV,UAACT,KAAD;AAAA,iBAAWA,KAAK,CAACG,EAAN,KAAaf,MAAM,CAACsB,OAA/B;AAAA,SADU;AAFP,OAAP;;AAMF;AACE,aAAOvB,KAAP;AAzCJ;AA2CD,CA5CD","sourcesContent":["import {\n  ADD_EVENT,\n  EDIT_EVENT,\n  GET_TRIP_EVENTS,\n  DELETE_EVENT,\n} from \"../actions/events\";\nimport Event from \"../../models/event\";\n\nconst initialState = {\n  tripEvents: [],\n};\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_EVENT:\n      const newEvent = new Event(\n        action.eventData.name,\n        action.eventData.desc,\n        action.eventData.date,\n        action.eventData.time,\n        action.eventData.tripParent\n      );\n      return {\n        tripEvents: state.tripEvents.concat(newEvent),\n      };\n    case EDIT_EVENT:\n      let tmpTripEvents = state.tripEvents;\n      tmpTripEvents.forEach(function (event, index, array) {\n        if (event.id == action.eventData.id) {\n          array[index] = {\n            ...event,\n            title: action.eventData.eventName,\n            description: action.eventData.eventDesc,\n            date: action.eventData.eventDate,\n            time: action.eventData.time,\n          };\n        }\n      });\n      return {\n        ...state,\n        tripEvents: tmpTripEvents,\n      };\n    case GET_TRIP_EVENTS:\n      return {\n        tripEvents: action.tripEvents,\n      };\n    case DELETE_EVENT:\n      return {\n        //...state,\n        tripEvents: state.tripEvents.filter(\n          (event) => event.id !== action.eventId\n        ),\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
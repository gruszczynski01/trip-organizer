{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/szymongruszczynski/Documents/INZYNIERKA/repo_dir/trip-organizer/trip-organizer-rn-app/screens/trip/tripTimeScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useSelector } from \"react-redux\";\nimport Card from \"../../components/technical/Card\";\nimport Input from \"../../components/technical/Input\";\nimport CalendarStrip from \"react-native-calendar-strip\";\nimport Calendar from \"react-native-calendar-select\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport Moment from \"moment\";\n\nvar tripTimeScreen = function tripTimeScreen(props) {\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      startDate = _useState2[0],\n      setStartDate = _useState2[1];\n\n  var _useState3 = useState(new Date()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      endDate = _useState4[0],\n      setEndDate = _useState4[1];\n\n  var trip = props.navigation.getParam(\"trip\");\n  var editedTrip = null;\n\n  if (trip != -1) {\n    editedTrip = useSelector(function (state) {\n      return state.trips.userTrips.find(function (tripElem) {\n        return tripElem.id === trip.id;\n      });\n    });\n  }\n\n  useEffect(function () {\n    if (!!editedTrip) {\n      setStartDate(new Date(editedTrip.tripBeginning));\n      setEndDate(new Date(editedTrip.tripEnding));\n    }\n  }, []);\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate;\n    setStartDate(currentDate);\n\n    if (currentDate > endDate) {\n      setEndDate(currentDate);\n    }\n  };\n\n  var onChangeEnd = function onChangeEnd(event, selectedDate) {\n    var currentDate = selectedDate;\n    setStartDate(startDate);\n    setEndDate(currentDate);\n  };\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"When are you going?\"), React.createElement(Text, {\n    style: styles.subtitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Trip begining\"), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(DateTimePicker, {\n    testID: \"dateTimePicker\",\n    value: startDate,\n    mode: \"date\",\n    display: \"default\",\n    onChange: onChange,\n    minimumDate: new Date(Date.now()),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })), React.createElement(Text, {\n    style: styles.subtitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Trip ending\"), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, React.createElement(DateTimePicker, {\n    dateFormat: \"dayofweek day month\",\n    testID: \"dateTimePicker\",\n    value: endDate,\n    mode: \"date\",\n    display: \"default\",\n    onChange: onChangeEnd,\n    minimumDate: startDate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Next\",\n    onPress: function onPress() {\n      console.log(_objectSpread(_objectSpread({}, props.navigation.state.params), {}, {\n        tripBeginning: startDate,\n        tripEnding: endDate\n      }));\n      props.navigation.navigate(\"TripName\", _objectSpread(_objectSpread({}, props.navigation.state.params), {}, {\n        tripBeginning: startDate,\n        tripEnding: endDate\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })));\n};\n\ntripTimeScreen.navigationOptions = {\n  headerTitle: \"Select time period\"\n};\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: \"flex-start\"\n  },\n  title: {\n    textTransform: \"uppercase\",\n    fontSize: 45,\n    fontWeight: \"bold\",\n    letterSpacing: 1,\n    margin: 30\n  },\n  title: {\n    textTransform: \"uppercase\",\n    fontSize: 25,\n    fontWeight: \"bold\",\n    letterSpacing: 1,\n    margin: 30\n  },\n  subtitle: {\n    textTransform: \"uppercase\",\n    fontSize: 15,\n    fontWeight: \"bold\",\n    letterSpacing: 1,\n    marginLeft: 30\n  },\n  input: {\n    width: \"80%\",\n    maxWidth: 400,\n    maxHeight: 400,\n    paddingHorizontal: 20,\n    paddingVertical: 5\n  },\n  buttonContainer: {\n    paddingVertical: 20\n  },\n  container: {\n    flex: 1\n  }\n});\nexport default tripTimeScreen;","map":{"version":3,"sources":["/Users/szymongruszczynski/Documents/INZYNIERKA/repo_dir/trip-organizer/trip-organizer-rn-app/screens/trip/tripTimeScreen.js"],"names":["React","useState","useEffect","useSelector","Card","Input","CalendarStrip","Calendar","DateTimePicker","Moment","tripTimeScreen","props","Date","startDate","setStartDate","endDate","setEndDate","trip","navigation","getParam","editedTrip","state","trips","userTrips","find","tripElem","id","tripBeginning","tripEnding","onChange","event","selectedDate","currentDate","onChangeEnd","styles","screen","title","subtitle","now","buttonContainer","console","log","params","navigate","navigationOptions","headerTitle","StyleSheet","create","flex","justifyContent","textTransform","fontSize","fontWeight","letterSpacing","margin","marginLeft","input","width","maxWidth","maxHeight","paddingHorizontal","paddingVertical","container"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Text, View, StyleSheet, Button } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport Card from \"../../components/technical/Card\";\nimport Input from \"../../components/technical/Input\";\n// import { Calendar } from \"react-native-calendars\";\nimport CalendarStrip from \"react-native-calendar-strip\";\nimport Calendar from \"react-native-calendar-select\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport Moment from \"moment\";\n\nconst tripTimeScreen = (props) => {\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n\n  const trip = props.navigation.getParam(\"trip\");\n  var editedTrip = null;\n  if (trip != -1) {\n    editedTrip = useSelector((state) =>\n      state.trips.userTrips.find((tripElem) => tripElem.id === trip.id)\n    );\n  }\n\n  useEffect(() => {\n    if (!!editedTrip) {\n      setStartDate(new Date(editedTrip.tripBeginning));\n      setEndDate(new Date(editedTrip.tripEnding));\n    }\n  }, []);\n\n  // poprawic pickery, pamietac o offsecie // dokończyć edit\n\n  const onChange = (event, selectedDate) => {\n    const currentDate = selectedDate;\n    setStartDate(currentDate);\n    if (currentDate > endDate) {\n      setEndDate(currentDate);\n    }\n  };\n  const onChangeEnd = (event, selectedDate) => {\n    const currentDate = selectedDate;\n    setStartDate(startDate);\n    setEndDate(currentDate);\n  };\n\n  return (\n    <View style={styles.screen}>\n      <Text style={styles.title}>When are you going?</Text>\n      <Text style={styles.subtitle}>Trip begining</Text>\n\n      <View>\n        <DateTimePicker\n          testID=\"dateTimePicker\"\n          value={startDate}\n          mode=\"date\"\n          // is24Hour={true}\n          display=\"default\"\n          onChange={onChange}\n          minimumDate={new Date(Date.now())}\n          // locale=\"pl-PL\"\n        />\n      </View>\n      <Text style={styles.subtitle}>Trip ending</Text>\n      <View>\n        <DateTimePicker\n          // locale=\"pl-PL\"\n          dateFormat=\"dayofweek day month\"\n          testID=\"dateTimePicker\"\n          value={endDate}\n          mode=\"date\"\n          // is24Hour={true}\n          display=\"default\"\n          onChange={onChangeEnd}\n          minimumDate={startDate}\n        />\n      </View>\n\n      <View style={styles.buttonContainer}>\n        <Button\n          title=\"Next\"\n          // color={Colors.accent}\n          onPress={() => {\n            console.log({\n              ...props.navigation.state.params,\n              tripBeginning: startDate,\n              tripEnding: endDate,\n            });\n            props.navigation.navigate(\"TripName\", {\n              ...props.navigation.state.params,\n              tripBeginning: startDate,\n              tripEnding: endDate,\n            });\n\n            // setIsSignup((prevState) => !prevState);\n          }}\n        />\n      </View>\n    </View>\n  );\n};\n\ntripTimeScreen.navigationOptions = {\n  headerTitle: \"Select time period\",\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: \"flex-start\",\n    // alignItems: \"center\",\n  },\n  title: {\n    textTransform: \"uppercase\",\n    fontSize: 45,\n    fontWeight: \"bold\",\n    letterSpacing: 1,\n    margin: 30,\n  },\n  title: {\n    textTransform: \"uppercase\",\n    fontSize: 25,\n    fontWeight: \"bold\",\n    letterSpacing: 1,\n    margin: 30,\n  },\n  subtitle: {\n    textTransform: \"uppercase\",\n    fontSize: 15,\n    fontWeight: \"bold\",\n    letterSpacing: 1,\n    marginLeft: 30,\n  },\n  input: {\n    width: \"80%\",\n    maxWidth: 400,\n    maxHeight: 400,\n    paddingHorizontal: 20,\n    paddingVertical: 5,\n  },\n  buttonContainer: {\n    paddingVertical: 20,\n  },\n  container: { flex: 1 },\n});\n\nexport default tripTimeScreen;\n"]},"metadata":{},"sourceType":"module"}
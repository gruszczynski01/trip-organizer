{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var ADD_TRIP = \"ADD_TRIP\";\nexport var EDIT_TRIP = \"EDIT_TRIP\";\nexport var GET_USER_TRIP = \"GET_USER_TRIP\";\nexport var GET_TRIP_MEMBERS = \"GET_TRIP_MEMBERS\";\nexport var DELETE_TRIP = \"DELETE_TRIP\";\nimport { auth, database } from \"../../firebase\";\nexport var addTrip = function addTrip(tripName, tripDestination, tripBeginning, tripEnding) {\n  return function _callee(dispatch, getState) {\n    var userId, newToDoListKey, newTripKey, updates;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            userId = getState().auth.userId;\n            newToDoListKey = database.ref().child(\"toDoLists\").push().key;\n            newTripKey = database.ref().child(\"trips\").push().key;\n            updates = {};\n            updates[\"trips/\" + newTripKey] = {\n              owner: userId,\n              name: tripName,\n              destination: tripDestination,\n              tripBeginning: tripBeginning,\n              tripEnding: tripEnding,\n              members: [{\n                userId: {}\n              }],\n              to_do_list: newToDoListKey,\n              events: {}\n            };\n            updates[\"toDoLists/\" + newToDoListKey] = {\n              tripParent: newTripKey,\n              tasks: []\n            };\n            database.ref().update(updates);\n            database.ref().child(\"trips/\" + newTripKey + \"/members/\" + userId).set(0);\n            database.ref().child(\"users/\" + userId + \"/userTrips/\" + newTripKey).set(0);\n            dispatch({\n              type: ADD_TRIP,\n              tripData: {\n                id: newTripKey,\n                owner: userId,\n                name: tripName,\n                destination: tripDestination,\n                tripBeginning: tripBeginning,\n                tripEnding: tripEnding,\n                members: [{\n                  userId: {}\n                }],\n                toDoList: newToDoListKey,\n                events: {}\n              },\n              toDoListData: {\n                tripParent: newTripKey,\n                tasks: []\n              }\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var editTrip = function editTrip(tripId, tripName, tripDestination, tripBeginning, tripEnding) {\n  return function _callee2(dispatch, getState) {\n    var userId, updates;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            userId = getState().auth.userId;\n            updates = {};\n            updates[\"trips/\" + tripId + \"/name\"] = tripName;\n            updates[\"trips/\" + tripId + \"/destination\"] = tripDestination;\n            updates[\"trips/\" + tripId + \"/tripBeginning\"] = tripBeginning;\n            updates[\"trips/\" + tripId + \"/tripEnding\"] = tripEnding;\n            database.ref().update(updates);\n            dispatch({\n              type: EDIT_TRIP,\n              tripData: {\n                id: tripId,\n                name: tripName,\n                destination: tripDestination,\n                tripBeginning: tripBeginning,\n                tripEnding: tripEnding\n              }\n            });\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var getTrips = function getTrips() {\n  return function _callee5(dispatch, getState) {\n    var userId, userTrips, response;\n    return _regeneratorRuntime.async(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            userId = getState().auth.userId;\n            userTrips = [];\n            _context5.next = 4;\n            return _regeneratorRuntime.awrap(database.ref(\"users/\" + userId + \"/userTrips\").once(\"value\").then(function _callee4(dataSnapshot) {\n              var data, key;\n              return _regeneratorRuntime.async(function _callee4$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      data = JSON.parse(JSON.stringify(dataSnapshot));\n                      _context4.t0 = _regeneratorRuntime.keys(data);\n\n                    case 2:\n                      if ((_context4.t1 = _context4.t0()).done) {\n                        _context4.next = 9;\n                        break;\n                      }\n\n                      key = _context4.t1.value;\n\n                      if (!data.hasOwnProperty(key)) {\n                        _context4.next = 7;\n                        break;\n                      }\n\n                      _context4.next = 7;\n                      return _regeneratorRuntime.awrap(function _callee3() {\n                        var tripId, nestedResponse;\n                        return _regeneratorRuntime.async(function _callee3$(_context3) {\n                          while (1) {\n                            switch (_context3.prev = _context3.next) {\n                              case 0:\n                                tripId = key;\n                                _context3.next = 3;\n                                return _regeneratorRuntime.awrap(database.ref(\"trips/\" + tripId).once(\"value\").then(function (dataSnapshot) {\n                                  console.log(dataSnapshot);\n                                  userTrips.push(_objectSpread(_objectSpread({}, JSON.parse(JSON.stringify(dataSnapshot))), {}, {\n                                    id: tripId\n                                  }));\n                                }));\n\n                              case 3:\n                                nestedResponse = _context3.sent;\n\n                              case 4:\n                              case \"end\":\n                                return _context3.stop();\n                            }\n                          }\n                        }, null, null, null, Promise);\n                      }());\n\n                    case 7:\n                      _context4.next = 2;\n                      break;\n\n                    case 9:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }));\n\n          case 4:\n            response = _context5.sent;\n            dispatch({\n              type: GET_USER_TRIP,\n              tripsData: userTrips\n            });\n\n          case 6:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var deleteTrip = function deleteTrip(tripId) {\n  return function _callee6(dispatch, getState) {\n    var userId, tripToDeleteRef;\n    return _regeneratorRuntime.async(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            userId = getState().auth.userId;\n            _context6.next = 3;\n            return _regeneratorRuntime.awrap(database.ref(\"trips/\" + tripId).remove().then(function () {\n              console.log(\"Remove succeeded.\");\n            }).catch(function (error) {\n              console.log(\"Remove failed: \" + error.message);\n            }));\n\n          case 3:\n            tripToDeleteRef = _context6.sent;\n            _context6.next = 6;\n            return _regeneratorRuntime.awrap(database.ref(\"users/\" + userId + \"/userTrips/\" + tripId).remove().then(function () {\n              console.log(\"Remove succeeded.\");\n            }).catch(function (error) {\n              console.log(\"Remove failed: \" + error.message);\n            }));\n\n          case 6:\n            tripToDeleteRef = _context6.sent;\n            dispatch({\n              type: DELETE_TRIP,\n              tripId: tripId\n            });\n\n          case 8:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var getTripMembers = function getTripMembers(tripId) {\n  return function _callee9(dispatch, getState) {\n    var tripMembersArray, response;\n    return _regeneratorRuntime.async(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            console.log(\"ACTRON TRIPS _ GET MEMBERS\");\n            tripMembersArray = [];\n            _context9.next = 4;\n            return _regeneratorRuntime.awrap(database.ref(\"trips/\" + tripId + \"/members\").once(\"value\").then(function _callee8(tripMembersDS) {\n              var data, key;\n              return _regeneratorRuntime.async(function _callee8$(_context8) {\n                while (1) {\n                  switch (_context8.prev = _context8.next) {\n                    case 0:\n                      data = JSON.parse(JSON.stringify(tripMembersDS));\n                      _context8.t0 = _regeneratorRuntime.keys(data);\n\n                    case 2:\n                      if ((_context8.t1 = _context8.t0()).done) {\n                        _context8.next = 9;\n                        break;\n                      }\n\n                      key = _context8.t1.value;\n\n                      if (!data.hasOwnProperty(key)) {\n                        _context8.next = 7;\n                        break;\n                      }\n\n                      _context8.next = 7;\n                      return _regeneratorRuntime.awrap(function _callee7() {\n                        var userId, nestedResponse;\n                        return _regeneratorRuntime.async(function _callee7$(_context7) {\n                          while (1) {\n                            switch (_context7.prev = _context7.next) {\n                              case 0:\n                                userId = key;\n                                _context7.next = 3;\n                                return _regeneratorRuntime.awrap(database.ref(\"users/\" + userId).once(\"value\").then(function (user) {\n                                  console.log(_objectSpread(_objectSpread({}, JSON.parse(JSON.stringify(user))), {}, {\n                                    id: userId\n                                  }));\n                                  tripMembersArray.push(_objectSpread(_objectSpread({}, JSON.parse(JSON.stringify(user))), {}, {\n                                    id: userId,\n                                    ifChoosen: false\n                                  }));\n                                }));\n\n                              case 3:\n                                nestedResponse = _context7.sent;\n\n                              case 4:\n                              case \"end\":\n                                return _context7.stop();\n                            }\n                          }\n                        }, null, null, null, Promise);\n                      }());\n\n                    case 7:\n                      _context8.next = 2;\n                      break;\n\n                    case 9:\n                    case \"end\":\n                      return _context8.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }));\n\n          case 4:\n            response = _context9.sent;\n            console.log(\"tripMembers\");\n            console.log(tripMembersArray);\n            dispatch({\n              type: GET_TRIP_MEMBERS,\n              tripMembers: tripMembersArray\n            });\n\n          case 8:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["/Users/szymongruszczynski/Documents/INZYNIERKA/repo_dir/trip-organizer/trip-organizer-rn-app/store/actions/trips.js"],"names":["ADD_TRIP","EDIT_TRIP","GET_USER_TRIP","GET_TRIP_MEMBERS","DELETE_TRIP","auth","database","addTrip","tripName","tripDestination","tripBeginning","tripEnding","dispatch","getState","userId","newToDoListKey","ref","child","push","key","newTripKey","updates","owner","name","destination","members","to_do_list","events","tripParent","tasks","update","set","type","tripData","id","toDoList","toDoListData","editTrip","tripId","getTrips","userTrips","once","then","dataSnapshot","data","JSON","parse","stringify","hasOwnProperty","console","log","nestedResponse","response","tripsData","deleteTrip","remove","catch","error","message","tripToDeleteRef","getTripMembers","tripMembersArray","tripMembersDS","user","ifChoosen","tripMembers"],"mappings":"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","sourcesContent":["export const ADD_TRIP = \"ADD_TRIP\";\nexport const EDIT_TRIP = \"EDIT_TRIP\";\nexport const GET_USER_TRIP = \"GET_USER_TRIP\";\nexport const GET_TRIP_MEMBERS = \"GET_TRIP_MEMBERS\";\nexport const DELETE_TRIP = \"DELETE_TRIP\";\n\nimport { auth, database } from \"../../firebase\";\n// import trips from \"../reducers/trips\";\n\nexport const addTrip = (\n  tripName,\n  tripDestination,\n  tripBeginning,\n  tripEnding\n) => {\n  return async (dispatch, getState) => {\n    const userId = getState().auth.userId;\n\n    const newToDoListKey = database.ref().child(\"toDoLists\").push().key;\n\n    const newTripKey = database.ref().child(\"trips\").push().key;\n\n    var updates = {};\n    updates[\"trips/\" + newTripKey] = {\n      owner: userId,\n      name: tripName,\n      destination: tripDestination,\n      tripBeginning: tripBeginning,\n      tripEnding: tripEnding,\n      members: [{ userId: {} }],\n      to_do_list: newToDoListKey,\n      events: {},\n    };\n    updates[\"toDoLists/\" + newToDoListKey] = {\n      tripParent: newTripKey,\n      tasks: [],\n    };\n    database.ref().update(updates);\n\n    database\n      .ref()\n      .child(\"trips/\" + newTripKey + \"/members/\" + userId)\n      .set(0);\n\n    database\n      .ref()\n      .child(\"users/\" + userId + \"/userTrips/\" + newTripKey)\n      .set(0);\n\n    //te dwa pushe mozna przerobic do tablicy updates\n\n    dispatch({\n      type: ADD_TRIP,\n      tripData: {\n        id: newTripKey,\n        owner: userId,\n        name: tripName,\n        destination: tripDestination,\n        tripBeginning: tripBeginning,\n        tripEnding: tripEnding,\n        members: [{ userId: {} }],\n        toDoList: newToDoListKey,\n        events: {},\n      },\n      toDoListData: { tripParent: newTripKey, tasks: [] },\n    });\n  };\n};\n\nexport const editTrip = (\n  tripId,\n  tripName,\n  tripDestination,\n  tripBeginning,\n  tripEnding\n) => {\n  return async (dispatch, getState) => {\n    const userId = getState().auth.userId;\n\n    var updates = {};\n    updates[\"trips/\" + tripId + \"/name\"] = tripName;\n    updates[\"trips/\" + tripId + \"/destination\"] = tripDestination;\n    updates[\"trips/\" + tripId + \"/tripBeginning\"] = tripBeginning;\n    updates[\"trips/\" + tripId + \"/tripEnding\"] = tripEnding;\n\n    database.ref().update(updates);\n\n    dispatch({\n      type: EDIT_TRIP,\n      tripData: {\n        id: tripId,\n        name: tripName,\n        destination: tripDestination,\n        tripBeginning: tripBeginning,\n        tripEnding: tripEnding,\n      },\n    });\n  };\n};\n\nexport const getTrips = () => {\n  return async (dispatch, getState) => {\n    const userId = getState().auth.userId;\n\n    let userTrips = [];\n\n    const response = await database\n      .ref(\"users/\" + userId + \"/userTrips\")\n      .once(\"value\")\n      .then(async function (dataSnapshot) {\n        const data = JSON.parse(JSON.stringify(dataSnapshot));\n        for (var key in data) {\n          if (data.hasOwnProperty(key)) {\n            const tripId = key;\n            const nestedResponse = await database\n              .ref(\"trips/\" + tripId)\n              .once(\"value\")\n              .then(function (dataSnapshot) {\n                console.log(dataSnapshot);\n                userTrips.push({\n                  ...JSON.parse(JSON.stringify(dataSnapshot)),\n                  id: tripId,\n                });\n              });\n          }\n        }\n      });\n    dispatch({\n      type: GET_USER_TRIP,\n      tripsData: userTrips,\n    });\n  };\n};\n\nexport const deleteTrip = (tripId) => {\n  return async (dispatch, getState) => {\n    const userId = getState().auth.userId;\n\n    var tripToDeleteRef = await database\n      .ref(\"trips/\" + tripId)\n      .remove()\n      .then(function () {\n        console.log(\"Remove succeeded.\");\n      })\n      .catch(function (error) {\n        console.log(\"Remove failed: \" + error.message);\n      });\n\n    tripToDeleteRef = await database\n      .ref(\"users/\" + userId + \"/userTrips/\" + tripId)\n      .remove()\n      .then(function () {\n        console.log(\"Remove succeeded.\");\n      })\n      .catch(function (error) {\n        console.log(\"Remove failed: \" + error.message);\n      });\n\n    dispatch({\n      type: DELETE_TRIP,\n      tripId: tripId,\n    });\n  };\n};\n\nexport const getTripMembers = (tripId) => {\n  return async (dispatch, getState) => {\n    console.log(\"ACTRON TRIPS _ GET MEMBERS\");\n    let tripMembersArray = [];\n\n    const response = await database\n      .ref(\"trips/\" + tripId + \"/members\")\n      .once(\"value\")\n      .then(async function (tripMembersDS) {\n        const data = JSON.parse(JSON.stringify(tripMembersDS));\n        for (var key in data) {\n          if (data.hasOwnProperty(key)) {\n            const userId = key;\n            const nestedResponse = await database\n              .ref(\"users/\" + userId)\n              .once(\"value\")\n              .then(function (user) {\n                console.log({\n                  ...JSON.parse(JSON.stringify(user)),\n                  id: userId,\n                });\n                tripMembersArray.push({\n                  ...JSON.parse(JSON.stringify(user)),\n                  id: userId,\n                  ifChoosen: false,\n                });\n              });\n          }\n        }\n      });\n\n    console.log(\"tripMembers\");\n    console.log(tripMembersArray);\n    dispatch({\n      type: GET_TRIP_MEMBERS,\n      tripMembers: tripMembersArray,\n    });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}
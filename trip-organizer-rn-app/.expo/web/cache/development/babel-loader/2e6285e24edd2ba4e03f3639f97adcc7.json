{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/szymongruszczynski/Documents/INZYNIERKA/repo_dir/trip-organizer/trip-organizer-rn-app/screens/trip/tripNameScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useReducer, useEffect, useCallback } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { not } from \"react-native-reanimated\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Card from \"../../components/technical/Card\";\nimport Input from \"../../components/technical/Input\";\nimport * as tripActions from \"../../store/actions/trips\";\nvar FORM_INPUT_UPDATE = \"FORM_INPUT_UPDATE\";\n\nvar formReducer = function formReducer(state, action) {\n  if (action.type === FORM_INPUT_UPDATE) {\n    var updatedValues = _objectSpread(_objectSpread({}, state.inputValues), {}, _defineProperty({}, action.input, action.value));\n\n    var updatedValidities = _objectSpread(_objectSpread({}, state.inputValidities), {}, _defineProperty({}, action.input, action.isValid));\n\n    var updatedFormIsValid = true;\n\n    for (var key in updatedValidities) {\n      updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\n    }\n\n    return {\n      formIsValid: updatedFormIsValid,\n      inputValidities: updatedValidities,\n      inputValues: updatedValues\n    };\n  }\n\n  return state;\n};\n\nvar tripNameScreen = function tripNameScreen(props) {\n  var dispatch = useDispatch();\n  var trip = props.navigation.getParam(\"trip\");\n  var editedTrip = null;\n\n  if (trip != -1) {\n    editedTrip = useSelector(function (state) {\n      return state.trips.userTrips.find(function (tripElem) {\n        return tripElem.id === trip.id;\n      });\n    });\n  }\n\n  var _useReducer = useReducer(formReducer, {\n    inputValues: {\n      name: editedTrip ? editedTrip.name : \"\"\n    },\n    inputValidities: {\n      name: editedTrip ? true : false\n    },\n    formIsValid: editedTrip ? true : false\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      formState = _useReducer2[0],\n      dispatchFormState = _useReducer2[1];\n\n  var inputChangeHandler = useCallback(function (inputIdentifier, inputValue, inputValidity) {\n    dispatchFormState({\n      type: FORM_INPUT_UPDATE,\n      value: inputValue,\n      isValid: inputValidity,\n      input: inputIdentifier\n    });\n  }, [dispatchFormState]);\n\n  var nextHandler = function nextHandler() {\n    var body;\n    return _regeneratorRuntime.async(function nextHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            body = _objectSpread(_objectSpread({}, props.navigation.state.params), {}, {\n              name: formState.inputValues.name\n            });\n\n            if (!editedTrip) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(dispatch(tripActions.editTrip(editedTrip.id, body.name, body.destination, body.tripBeginning, body.tripEnding)));\n\n          case 4:\n            _context.next = 8;\n            break;\n\n          case 6:\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(dispatch(tripActions.addTrip(body.name, body.destination, body.tripBeginning, body.tripEnding)));\n\n          case 8:\n            props.navigation.navigate(\"TripList\");\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: \"padding\",\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.mainContent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"Enter trip name \\uD83D\\uDE01\"), React.createElement(Card, {\n    style: styles.input,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, React.createElement(Input, {\n    id: \"name\",\n    label: \"Name\",\n    required: true,\n    autoCapitalize: \"none\",\n    errorText: \"Please enter a valid name.\",\n    onInputChange: inputChangeHandler,\n    initialValue: editedTrip ? editedTrip.name : \"\",\n    initiallyValid: !!editedTrip,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"Save\",\n    onPress: nextHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }))))));\n};\n\ntripNameScreen.navigationOptions = {\n  headerTitle: \"Select destination\"\n};\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1\n  },\n  mainContent: {\n    flex: 1,\n    justifyContent: \"flex-start\",\n    alignItems: \"center\"\n  },\n  title: {\n    textTransform: \"uppercase\",\n    fontSize: 45,\n    fontWeight: \"bold\",\n    letterSpacing: 1,\n    margin: 30\n  },\n  input: {\n    width: \"80%\",\n    maxWidth: 400,\n    maxHeight: 400,\n    paddingHorizontal: 20,\n    paddingVertical: 5\n  },\n  buttonContainer: {\n    paddingVertical: 20\n  }\n});\nexport default tripNameScreen;","map":{"version":3,"sources":["/Users/szymongruszczynski/Documents/INZYNIERKA/repo_dir/trip-organizer/trip-organizer-rn-app/screens/trip/tripNameScreen.js"],"names":["React","useState","useReducer","useEffect","useCallback","ScrollView","not","useDispatch","useSelector","Card","Input","tripActions","FORM_INPUT_UPDATE","formReducer","state","action","type","updatedValues","inputValues","input","value","updatedValidities","inputValidities","isValid","updatedFormIsValid","key","formIsValid","tripNameScreen","props","dispatch","trip","navigation","getParam","editedTrip","trips","userTrips","find","tripElem","id","name","formState","dispatchFormState","inputChangeHandler","inputIdentifier","inputValue","inputValidity","nextHandler","body","params","editTrip","destination","tripBeginning","tripEnding","addTrip","navigate","styles","screen","mainContent","title","buttonContainer","navigationOptions","headerTitle","StyleSheet","create","flex","justifyContent","alignItems","textTransform","fontSize","fontWeight","letterSpacing","margin","width","maxWidth","maxHeight","paddingHorizontal","paddingVertical"],"mappings":"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","sourcesContent":["import React, { useState, useReducer, useEffect, useCallback } from \"react\";\nimport {\n  Text,\n  View,\n  StyleSheet,\n  Button,\n  KeyboardAvoidingView,\n} from \"react-native\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { not } from \"react-native-reanimated\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Card from \"../../components/technical/Card\";\nimport Input from \"../../components/technical/Input\";\nimport * as tripActions from \"../../store/actions/trips\";\n\nconst FORM_INPUT_UPDATE = \"FORM_INPUT_UPDATE\";\n\nconst formReducer = (state, action) => {\n  if (action.type === FORM_INPUT_UPDATE) {\n    const updatedValues = {\n      ...state.inputValues,\n      [action.input]: action.value,\n    };\n    const updatedValidities = {\n      ...state.inputValidities,\n      [action.input]: action.isValid,\n    };\n    let updatedFormIsValid = true;\n    for (const key in updatedValidities) {\n      updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\n    }\n    return {\n      formIsValid: updatedFormIsValid,\n      inputValidities: updatedValidities,\n      inputValues: updatedValues,\n    };\n  }\n  return state;\n};\n\nconst tripNameScreen = (props) => {\n  const dispatch = useDispatch();\n\n  const trip = props.navigation.getParam(\"trip\");\n  var editedTrip = null;\n  if (trip != -1) {\n    editedTrip = useSelector((state) =>\n      state.trips.userTrips.find((tripElem) => tripElem.id === trip.id)\n    );\n  }\n\n  const [formState, dispatchFormState] = useReducer(formReducer, {\n    inputValues: {\n      name: editedTrip ? editedTrip.name : \"\",\n    },\n    inputValidities: {\n      name: editedTrip ? true : false,\n    },\n    formIsValid: editedTrip ? true : false,\n  });\n\n  const inputChangeHandler = useCallback(\n    (inputIdentifier, inputValue, inputValidity) => {\n      dispatchFormState({\n        type: FORM_INPUT_UPDATE,\n        value: inputValue,\n        isValid: inputValidity,\n        input: inputIdentifier,\n      });\n    },\n    [dispatchFormState]\n  );\n\n  const nextHandler = async () => {\n    // inputChangeHandler();\n\n    var body = {\n      ...props.navigation.state.params,\n      name: formState.inputValues.name,\n    };\n\n    if (!!editedTrip) {\n      await dispatch(\n        tripActions.editTrip(\n          editedTrip.id,\n          body.name,\n          body.destination,\n          body.tripBeginning,\n          body.tripEnding\n        )\n      );\n    } else {\n      await dispatch(\n        tripActions.addTrip(\n          body.name,\n          body.destination,\n          body.tripBeginning,\n          body.tripEnding\n        )\n      );\n    }\n\n    props.navigation.navigate(\"TripList\");\n  };\n\n  return (\n    <KeyboardAvoidingView\n      behavior=\"padding\"\n      //keyboardVerticalOffset={50}\n      style={styles.screen}\n    >\n      <View style={styles.mainContent}>\n        <Text style={styles.title}>Enter trip name 😁</Text>\n        <Card style={styles.input}>\n          <ScrollView>\n            <Input\n              id=\"name\"\n              label=\"Name\"\n              required\n              autoCapitalize=\"none\"\n              errorText=\"Please enter a valid name.\"\n              onInputChange={inputChangeHandler}\n              initialValue={editedTrip ? editedTrip.name : \"\"}\n              initiallyValid={!!editedTrip}\n            />\n            <View style={styles.buttonContainer}>\n              <Button title=\"Save\" onPress={nextHandler} />\n            </View>\n          </ScrollView>\n        </Card>\n      </View>\n    </KeyboardAvoidingView>\n  );\n};\n\ntripNameScreen.navigationOptions = {\n  headerTitle: \"Select destination\",\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n  },\n  mainContent: {\n    flex: 1,\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n  },\n  title: {\n    textTransform: \"uppercase\",\n    fontSize: 45,\n    fontWeight: \"bold\",\n    letterSpacing: 1,\n    margin: 30,\n  },\n  input: {\n    width: \"80%\",\n    maxWidth: 400,\n    maxHeight: 400,\n    paddingHorizontal: 20,\n    paddingVertical: 5,\n  },\n  buttonContainer: {\n    paddingVertical: 20,\n  },\n});\n\nexport default tripNameScreen;\n"]},"metadata":{},"sourceType":"module"}
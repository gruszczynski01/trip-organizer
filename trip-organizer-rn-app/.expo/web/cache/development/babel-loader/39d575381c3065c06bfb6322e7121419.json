{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_TASK, EDIT_TASK, GET_TRIP_TASKS, DELETE_TASK } from \"../actions/tasks\";\nimport Event from \"../../models/event\";\nvar initialState = {\n  toDoListTasks: []\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TASK:\n      var newEvent = new Event(action.eventData.name, action.eventData.desc, action.eventData.date, action.eventData.time, action.eventData.tripParent);\n      return {\n        tripEvents: state.tripEvents.concat(newEvent)\n      };\n\n    case EDIT_TASK:\n      var tmpToDoListTasks = state.toDoListTasks;\n      tmpToDoListTasks.forEach(function (task, index, array) {\n        if (task.id == action.taskData.id) {\n          array[index] = _objectSpread(_objectSpread({}, task), {}, {\n            name: action.taskData.name,\n            description: action.taskData.description,\n            owner: action.taskData.owner,\n            ifDone: action.taskData.ifDone\n          });\n        }\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        toDoListTasks: tmpToDoListTasks\n      });\n\n    case GET_TRIP_TASKS:\n      return {\n        toDoListTasks: action.toDoListTasks\n      };\n\n    case DELETE_TASK:\n      return {\n        tripEvents: state.tripEvents.filter(function (event) {\n          return event.id !== action.eventId;\n        })\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/szymongruszczynski/Documents/INZYNIERKA/repo_dir/trip-organizer/trip-organizer-rn-app/store/reducers/tasks.js"],"names":["ADD_TASK","EDIT_TASK","GET_TRIP_TASKS","DELETE_TASK","Event","initialState","toDoListTasks","state","action","type","newEvent","eventData","name","desc","date","time","tripParent","tripEvents","concat","tmpToDoListTasks","forEach","task","index","array","id","taskData","description","owner","ifDone","filter","event","eventId"],"mappings":";;;;;;AAAA,SACEA,QADF,EAEEC,SAFF,EAGEC,cAHF,EAIEC,WAJF;AAMA,OAAOC,KAAP;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE;AADI,CAArB;AAGA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,QAAL;AACE,UAAMU,QAAQ,GAAG,IAAIN,KAAJ,CACfI,MAAM,CAACG,SAAP,CAAiBC,IADF,EAEfJ,MAAM,CAACG,SAAP,CAAiBE,IAFF,EAGfL,MAAM,CAACG,SAAP,CAAiBG,IAHF,EAIfN,MAAM,CAACG,SAAP,CAAiBI,IAJF,EAKfP,MAAM,CAACG,SAAP,CAAiBK,UALF,CAAjB;AAOA,aAAO;AACLC,QAAAA,UAAU,EAAEV,KAAK,CAACU,UAAN,CAAiBC,MAAjB,CAAwBR,QAAxB;AADP,OAAP;;AAGF,SAAKT,SAAL;AACE,UAAIkB,gBAAgB,GAAGZ,KAAK,CAACD,aAA7B;AACAa,MAAAA,gBAAgB,CAACC,OAAjB,CAAyB,UAAUC,IAAV,EAAgBC,KAAhB,EAAuBC,KAAvB,EAA8B;AACrD,YAAIF,IAAI,CAACG,EAAL,IAAWhB,MAAM,CAACiB,QAAP,CAAgBD,EAA/B,EAAmC;AACjCD,UAAAA,KAAK,CAACD,KAAD,CAAL,mCACKD,IADL;AAEET,YAAAA,IAAI,EAAEJ,MAAM,CAACiB,QAAP,CAAgBb,IAFxB;AAGEc,YAAAA,WAAW,EAAElB,MAAM,CAACiB,QAAP,CAAgBC,WAH/B;AAIEC,YAAAA,KAAK,EAAEnB,MAAM,CAACiB,QAAP,CAAgBE,KAJzB;AAKEC,YAAAA,MAAM,EAAEpB,MAAM,CAACiB,QAAP,CAAgBG;AAL1B;AAOD;AACF,OAVD;AAWA,6CACKrB,KADL;AAEED,QAAAA,aAAa,EAAEa;AAFjB;;AAIF,SAAKjB,cAAL;AACE,aAAO;AACLI,QAAAA,aAAa,EAAEE,MAAM,CAACF;AADjB,OAAP;;AAGF,SAAKH,WAAL;AACE,aAAO;AAELc,QAAAA,UAAU,EAAEV,KAAK,CAACU,UAAN,CAAiBY,MAAjB,CACV,UAACC,KAAD;AAAA,iBAAWA,KAAK,CAACN,EAAN,KAAahB,MAAM,CAACuB,OAA/B;AAAA,SADU;AAFP,OAAP;;AAMF;AACE,aAAOxB,KAAP;AAzCJ;AA2CD,CA5CD","sourcesContent":["import {\n  ADD_TASK,\n  EDIT_TASK,\n  GET_TRIP_TASKS,\n  DELETE_TASK,\n} from \"../actions/tasks\";\nimport Event from \"../../models/event\";\n\nconst initialState = {\n  toDoListTasks: [],\n};\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TASK:\n      const newEvent = new Event(\n        action.eventData.name,\n        action.eventData.desc,\n        action.eventData.date,\n        action.eventData.time,\n        action.eventData.tripParent\n      );\n      return {\n        tripEvents: state.tripEvents.concat(newEvent),\n      };\n    case EDIT_TASK:\n      let tmpToDoListTasks = state.toDoListTasks;\n      tmpToDoListTasks.forEach(function (task, index, array) {\n        if (task.id == action.taskData.id) {\n          array[index] = {\n            ...task,\n            name: action.taskData.name,\n            description: action.taskData.description,\n            owner: action.taskData.owner,\n            ifDone: action.taskData.ifDone,\n          };\n        }\n      });\n      return {\n        ...state,\n        toDoListTasks: tmpToDoListTasks,\n      };\n    case GET_TRIP_TASKS:\n      return {\n        toDoListTasks: action.toDoListTasks,\n      };\n    case DELETE_TASK:\n      return {\n        //...state,\n        tripEvents: state.tripEvents.filter(\n          (event) => event.id !== action.eventId\n        ),\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
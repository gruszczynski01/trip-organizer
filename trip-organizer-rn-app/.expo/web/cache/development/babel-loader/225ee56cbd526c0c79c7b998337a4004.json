{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/szymongruszczynski/Documents/INZYNIERKA/repo_dir/trip-organizer/trip-organizer-rn-app/screens/features/trip_timeline/eventTimeScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useReducer, useCallback, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Card from \"../../../components/technical/Card\";\nimport Input from \"../../../components/technical/Input\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { HeaderButtons, Item } from \"react-navigation-header-buttons\";\nimport HeaderButton from \"../../../components/technical/HeaderButton\";\nimport * as eventActions from \"../../../store/actions/events\";\nimport Moment from \"moment\";\n\nvar eventTimeScreen = function eventTimeScreen(props) {\n  var trip = props.navigation.getParam(\"trip\");\n  var event = props.navigation.getParam(\"event\");\n  var editedEvent = null;\n\n  if (event != -1) {\n    editedEvent = useSelector(function (state) {\n      return state.events.tripEvents.find(function (eventElem) {\n        return eventElem.id === event.id;\n      });\n    });\n  }\n\n  var _useState = useState(new Date(new Date(trip.tripBeginning).setHours(9, 0, 0, 0))),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  useEffect(function () {\n    if (!!editedEvent) {\n      setDate(new Date(editedEvent.date.substring(6, 10), editedEvent.date.substring(3, 5) - 1, editedEvent.date.substring(0, 2), editedEvent.time.substring(0, 2), editedEvent.time.substring(3, 5)).toISOString());\n    }\n  }, []);\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate;\n    setDate(currentDate);\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: \"position\",\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.mainContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.dataTimePickerContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, React.createElement(DateTimePicker, {\n    testID: \"dateTimePicker\",\n    value: date,\n    mode: \"datetime\",\n    is24Hour: true,\n    display: \"default\",\n    onChange: onChange,\n    style: {\n      color: \"white\"\n    },\n    minimumDate: new Date(trip.tripBeginning).setHours(0, 0, 0, 0),\n    maximumDate: new Date(trip.tripEnding).setHours(23, 59, 59, 0),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"Next\",\n    onPress: function onPress() {\n      console.log(_objectSpread(_objectSpread({}, props.navigation.state.params), {}, {\n        date: date\n      }));\n      props.navigation.navigate(\"EventData\", _objectSpread(_objectSpread({}, props.navigation.state.params), {}, {\n        date: date\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }))));\n};\n\neventTimeScreen.navigationOptions = function (navData) {\n  var submitFn = navData.navigation.getParam(\"submit\");\n  return {\n    headerTitle: \"Select event time\",\n    headerRight: function headerRight() {\n      return React.createElement(HeaderButtons, {\n        HeaderButtonComponent: HeaderButton,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }\n      }, React.createElement(Item, {\n        buttonStyle: {\n          color: \"#147efb\"\n        },\n        title: \"Add\",\n        iconName: \"ios-save\",\n        onPress: submitFn,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }));\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  mainContainer: {\n    width: \"100%\"\n  },\n  dataTimePickerContainer: {\n    marginVertical: 20\n  },\n  screen: {\n    flex: 1,\n    justifyContent: \"flex-start\",\n    alignContent: \"center\",\n    backgroundColor: \"#2C2C2E\"\n  },\n  title: {\n    textTransform: \"uppercase\",\n    fontSize: 45,\n    fontWeight: \"bold\",\n    letterSpacing: 1,\n    margin: 30,\n    color: \"white\"\n  },\n  input: {\n    color: \"#F2F2F7\"\n  },\n  inputStyle: {\n    color: \"#F2F2F7\"\n  },\n  cardContainer: {\n    alignItems: \"center\"\n  },\n  card: {\n    width: \"90%\",\n    maxHeight: 400,\n    padding: 20,\n    backgroundColor: \"black\"\n  }\n});\nexport default eventTimeScreen;","map":{"version":3,"sources":["/Users/szymongruszczynski/Documents/INZYNIERKA/repo_dir/trip-organizer/trip-organizer-rn-app/screens/features/trip_timeline/eventTimeScreen.js"],"names":["React","useState","useReducer","useCallback","useEffect","useDispatch","useSelector","Card","Input","DateTimePicker","HeaderButtons","Item","HeaderButton","eventActions","Moment","eventTimeScreen","props","trip","navigation","getParam","event","editedEvent","state","events","tripEvents","find","eventElem","id","Date","tripBeginning","setHours","date","setDate","substring","time","toISOString","onChange","selectedDate","currentDate","styles","screen","mainContainer","dataTimePickerContainer","color","tripEnding","buttonContainer","console","log","params","navigate","navigationOptions","navData","submitFn","headerTitle","headerRight","StyleSheet","create","width","marginVertical","flex","justifyContent","alignContent","backgroundColor","title","textTransform","fontSize","fontWeight","letterSpacing","margin","input","inputStyle","cardContainer","alignItems","card","maxHeight","padding"],"mappings":"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","sourcesContent":["import React, { useState, useReducer, useCallback, useEffect } from \"react\";\nimport {\n  Text,\n  View,\n  StyleSheet,\n  Button,\n  ScrollView,\n  KeyboardAvoidingView,\n} from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Card from \"../../../components/technical/Card\";\nimport Input from \"../../../components/technical/Input\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { HeaderButtons, Item } from \"react-navigation-header-buttons\";\nimport HeaderButton from \"../../../components/technical/HeaderButton\";\nimport * as eventActions from \"../../../store/actions/events\";\nimport Moment from \"moment\";\n\nconst eventTimeScreen = (props) => {\n  const trip = props.navigation.getParam(\"trip\");\n  const event = props.navigation.getParam(\"event\");\n  var editedEvent = null;\n  if (event != -1) {\n    editedEvent = useSelector((state) =>\n      state.events.tripEvents.find((eventElem) => eventElem.id === event.id)\n    );\n  }\n  const [date, setDate] = useState(\n    new Date(new Date(trip.tripBeginning).setHours(9, 0, 0, 0))\n  );\n\n  useEffect(() => {\n    if (!!editedEvent) {\n      setDate(\n        new Date(\n          editedEvent.date.substring(6, 10),\n          editedEvent.date.substring(3, 5) - 1,\n          editedEvent.date.substring(0, 2),\n          editedEvent.time.substring(0, 2),\n          editedEvent.time.substring(3, 5)\n        ).toISOString()\n      );\n    }\n  }, []);\n\n  const onChange = (event, selectedDate) => {\n    const currentDate = selectedDate;\n    setDate(currentDate);\n  };\n\n  // useEffect(() => {\n  //   props.navigation.setParams({ submit: submitHandler });\n  // }, [submitHandler]);\n\n  return (\n    <KeyboardAvoidingView behavior=\"position\" style={styles.screen}>\n      <View style={styles.mainContainer}>\n        <View style={styles.dataTimePickerContainer}>\n          <DateTimePicker\n            testID=\"dateTimePicker\"\n            value={date}\n            mode=\"datetime\"\n            is24Hour={true}\n            display=\"default\"\n            onChange={onChange}\n            // onChange={() => {\n            //   console.log(\"ZAMIAAANAA\");\n            // }}\n            style={{ color: \"white\" }}\n            minimumDate={new Date(trip.tripBeginning).setHours(0, 0, 0, 0)}\n            maximumDate={new Date(trip.tripEnding).setHours(23, 59, 59, 0)}\n          />\n        </View>\n        <View style={styles.buttonContainer}>\n          <Button\n            title=\"Next\"\n            // color={Colors.accent}\n            onPress={() => {\n              console.log({\n                ...props.navigation.state.params,\n                date: date,\n              });\n              props.navigation.navigate(\"EventData\", {\n                ...props.navigation.state.params,\n                date: date,\n              });\n\n              // setIsSignup((prevState) => !prevState);\n            }}\n          />\n        </View>\n      </View>\n    </KeyboardAvoidingView>\n  );\n};\n\neventTimeScreen.navigationOptions = (navData) => {\n  const submitFn = navData.navigation.getParam(\"submit\");\n\n  return {\n    headerTitle: \"Select event time\",\n    headerRight: () => (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          buttonStyle={{ color: \"#147efb\" }}\n          title=\"Add\"\n          iconName=\"ios-save\"\n          onPress={submitFn}\n          //TO DO: save or edit event\n\n          // navData.navigation.goBack();\n        />\n      </HeaderButtons>\n    ),\n  };\n};\n\nconst styles = StyleSheet.create({\n  mainContainer: {\n    width: \"100%\",\n    // alignItems: \"center\",\n  },\n  dataTimePickerContainer: {\n    marginVertical: 20,\n  },\n  screen: {\n    flex: 1,\n    justifyContent: \"flex-start\",\n    alignContent: \"center\",\n    // alignItems: \"center\",\n    backgroundColor: \"#2C2C2E\",\n  },\n  title: {\n    textTransform: \"uppercase\",\n    fontSize: 45,\n    fontWeight: \"bold\",\n    letterSpacing: 1,\n    margin: 30,\n    color: \"white\",\n  },\n  input: { color: \"#F2F2F7\" },\n  inputStyle: { color: \"#F2F2F7\" },\n\n  cardContainer: { alignItems: \"center\" },\n  card: {\n    width: \"90%\",\n    // maxWidth: 400,\n    maxHeight: 400,\n    padding: 20,\n    // backgroundColor: \"#202022\",\n    backgroundColor: \"black\",\n  },\n});\n\nexport default eventTimeScreen;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/szymongruszczynski/Documents/INZYNIERKA/repo_dir/trip-organizer/trip-organizer-rn-app/screens/features/to_do_list/toDoListScreen.js\";\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Card from \"../../../components/technical/Card\";\nimport { HeaderButtons, Item } from \"react-navigation-header-buttons\";\nimport HeaderButton from \"../../../components/technical/HeaderButton\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport * as Animatable from \"react-native-animatable\";\nimport * as taskActions from \"../../../store/actions/tasks\";\n\nvar toDoListScreen = function toDoListScreen(props) {\n  var trip = props.navigation.getParam(\"trip\");\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isRefreshing = _useState4[0],\n      setIsRefreshing = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      refresh = _useState6[0],\n      setRefresh = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      error = _useState8[0],\n      setError = _useState8[1];\n\n  var tasks = useSelector(function (state) {\n    return state.tasks.toDoListTasks;\n  });\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isEnabled = _useState10[0],\n      setIsEnabled = _useState10[1];\n\n  var toggleSwitch = function toggleSwitch() {\n    return setIsEnabled(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  var dispatch = useDispatch();\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      data = _useState12[0],\n      setData = _useState12[1];\n\n  var addNewTaskHandler = function addNewTaskHandler() {};\n\n  var longPressHandler = function longPressHandler(task) {\n    Alert.alert(task.name, \"What do you want to do with?\", [{\n      text: \"Delete\",\n      style: \"destructive\",\n      onPress: function onPress() {\n        console.log(\"Deleting\");\n        console.log(task);\n      }\n    }, {\n      text: \"Edit\",\n      style: \"default\",\n      onPress: function onPress() {\n        console.log(\"Editing\");\n        props.navigation.navigate(\"EditTask\", {\n          trip: trip,\n          task: task\n        });\n      }\n    }, {\n      text: \"Cancel\",\n      style: \"cancel\",\n      onPress: function onPress() {\n        console.log(\"Editing\");\n      }\n    }]);\n  };\n\n  var loadTasks = useCallback(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setError(null);\n            setIsRefreshing(true);\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(dispatch(taskActions.getTasks(trip.to_do_list)));\n\n          case 5:\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](2);\n            setError(_context.t0.message);\n\n          case 10:\n            setData();\n            setIsRefreshing(false);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 7]], Promise);\n  }, [dispatch, setIsLoading, setError]);\n  useEffect(function () {\n    var willFocusSub = props.navigation.addListener(\"willFocus\", loadTasks);\n    return function () {\n      willFocusSub.remove();\n    };\n  }, [loadTasks]);\n  useEffect(function () {\n    setIsLoading(true);\n    loadTasks().then(function () {\n      setIsLoading(false);\n    });\n  }, [dispatch, loadTasks]);\n\n  if (error) {\n    return React.createElement(View, {\n      style: styles.centered,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, \"An error occurred!\"), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, error), React.createElement(Button, {\n      title: \"Try again\",\n      onPress: loadTasks,\n      color: \"red\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  if (!isLoading && tasks.length === 0) {\n    return React.createElement(View, {\n      style: styles.centered,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, \"No tasks found. Maybe start adding some!\"));\n  }\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.filterContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.filterContainerItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.destination,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"Only my tasks\")), React.createElement(View, {\n    style: styles.filterContainerItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, React.createElement(Switch, {\n    ios_backgroundColor: \"#3e3e3e\",\n    onValueChange: toggleSwitch,\n    value: isEnabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }))), React.createElement(FlatList, {\n    onRefresh: loadTasks,\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: isRefreshing,\n      onRefresh: loadTasks,\n      tintColor: \"#F2F2F7\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }),\n    refreshing: isRefreshing,\n    data: tasks,\n    extraData: refresh,\n    bounces: true,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: function renderItem(itemData) {\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }\n      }, React.createElement(Animatable.View, {\n        animation: \"bounceInLeft\",\n        iterationCount: 1,\n        easing: \"linear\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }\n      }, React.createElement(Card, {\n        style: styles.cartItem,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: styles.checkmarkContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          console.log(\"chekbox!!\");\n          dispatch(taskActions.editTask(itemData.item.id, itemData.item.name, itemData.item.description, !itemData.item.ifDone, itemData.item.owner));\n          loadTasks();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 19\n        }\n      }, React.createElement(Ionicons, {\n        name: itemData.item.ifDone === true ? \"ios-checkmark-circle\" : \"ios-radio-button-off\",\n        size: 32,\n        color: itemData.item.ifDone === true ? \"#00D84D\" : \"grey\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }\n      }))), React.createElement(View, {\n        style: styles.contentContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          console.log(itemData.item);\n          setRefresh(!refresh);\n          tasks.forEach(function (task) {\n            if (task.id == itemData.item.id) {\n              task.showDetails = !task.showDetails;\n            }\n          });\n        },\n        onLongPress: function onLongPress(trip) {\n          longPressHandler(itemData.item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: styles.nameContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }\n      }, React.createElement(Animatable.Text, {\n        style: styles.title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 23\n        }\n      }, itemData.item.name), React.createElement(View, {\n        style: {\n          borderTopColor: \"grey\",\n          borderTopWidth: 1,\n          width: \"90%\",\n          paddingTop: 10,\n          paddingBottom: 10,\n          alignContent: \"center\",\n          justifyContent: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: styles.destination,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }\n      }, itemData.item.ownerName)), itemData.item.showDetails && React.createElement(Animatable.View, {\n        animation: \"flipInX\",\n        iterationCount: 1,\n        easing: \"linear\",\n        style: {\n          borderTopColor: \"grey\",\n          borderTopWidth: 1,\n          width: \"90%\",\n          paddingTop: 10,\n          alignContent: \"center\",\n          justifyContent: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.destination,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 27\n        }\n      }, \"Desciption: \", itemData.item.description))))))));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }));\n};\n\ntoDoListScreen.navigationOptions = function (navData) {\n  var trip = navData.navigation.getParam(\"trip\");\n  return {\n    headerTitle: \"To do list\",\n    headerLeft: function headerLeft() {\n      return React.createElement(HeaderButtons, {\n        HeaderButtonComponent: HeaderButton,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 7\n        }\n      }, React.createElement(Item, {\n        buttonStyle: {\n          color: \"#147efb\"\n        },\n        title: \"Menu\",\n        iconName: Platform.OS === \"android\" ? \"md-menu\" : \"ios-menu\",\n        onPress: function onPress() {\n          navData.navigation.toggleDrawer();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 9\n        }\n      }));\n    },\n    headerRight: function headerRight() {\n      return React.createElement(HeaderButtons, {\n        HeaderButtonComponent: HeaderButton,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 7\n        }\n      }, React.createElement(Item, {\n        buttonStyle: {\n          color: \"#147efb\"\n        },\n        title: \"Add\",\n        iconName: \"ios-add-circle-outline\",\n        onPress: function onPress() {\n          navData.navigation.navigate(\"EditTask\", {\n            trip: trip,\n            task: -1\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 9\n        }\n      }));\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    backgroundColor: \"#2C2C2E\",\n    justifyContent: \"flex-start\"\n  },\n  filterContainer: {\n    flex: 1,\n    height: 30,\n    maxHeight: 50,\n    flexDirection: \"row\",\n    paddingTop: 10,\n    justifyContent: \"space-between\",\n    alignContent: \"space-around\"\n  },\n  filterContainerItem: {\n    alignSelf: \"center\",\n    paddingHorizontal: 25\n  },\n  cartItem: {\n    padding: 10,\n    backgroundColor: \"black\",\n    justifyContent: \"flex-start\",\n    alignItems: \"stretch\",\n    alignContent: \"stretch\",\n    marginHorizontal: 20,\n    marginTop: 20,\n    minHeight: 75,\n    flex: 1,\n    flexDirection: \"row\"\n  },\n  checkmarkContainer: {\n    width: \"15%\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    paddingLeft: 3\n  },\n  contentContainer: {\n    width: \"85%\"\n  },\n  nameContainer: {\n    flex: 1,\n    alignItems: \"flex-start\",\n    justifyContent: \"center\"\n  },\n  title: {\n    textTransform: \"uppercase\",\n    fontSize: 18,\n    fontWeight: \"bold\",\n    letterSpacing: 1,\n    padding: 5,\n    color: \"white\",\n    borderBottomColor: \"blue\",\n    borderBottomWidth: 2,\n    flexWrap: \"wrap\"\n  },\n  dateText: {\n    fontSize: 17,\n    letterSpacing: 1,\n    padding: 5,\n    color: \"#F2F2F7\"\n  },\n  destination: {\n    fontSize: 17,\n    letterSpacing: 1,\n    fontWeight: \"bold\",\n    paddingLeft: 5,\n    color: \"#F2F2F7\"\n  },\n  container: {\n    flex: 1,\n    paddingTop: 20\n  },\n  listItem: {\n    height: 75,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default toDoListScreen;","map":{"version":3,"sources":["/Users/szymongruszczynski/Documents/INZYNIERKA/repo_dir/trip-organizer/trip-organizer-rn-app/screens/features/to_do_list/toDoListScreen.js"],"names":["React","useState","useCallback","useEffect","useDispatch","useSelector","Card","HeaderButtons","Item","HeaderButton","TouchableOpacity","Ionicons","Animatable","taskActions","toDoListScreen","props","trip","navigation","getParam","isLoading","setIsLoading","isRefreshing","setIsRefreshing","refresh","setRefresh","error","setError","tasks","state","toDoListTasks","isEnabled","setIsEnabled","toggleSwitch","previousState","dispatch","data","setData","addNewTaskHandler","longPressHandler","task","Alert","alert","name","text","style","onPress","console","log","navigate","loadTasks","getTasks","to_do_list","message","willFocusSub","addListener","remove","then","styles","centered","length","screen","filterContainer","filterContainerItem","destination","item","id","itemData","cartItem","checkmarkContainer","editTask","description","ifDone","owner","contentContainer","forEach","showDetails","nameContainer","title","borderTopColor","borderTopWidth","width","paddingTop","paddingBottom","alignContent","justifyContent","ownerName","navigationOptions","navData","headerTitle","headerLeft","color","Platform","OS","toggleDrawer","headerRight","StyleSheet","create","flex","backgroundColor","height","maxHeight","flexDirection","alignSelf","paddingHorizontal","padding","alignItems","marginHorizontal","marginTop","minHeight","paddingLeft","textTransform","fontSize","fontWeight","letterSpacing","borderBottomColor","borderBottomWidth","flexWrap","dateText","container","listItem"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  FlatList,\n  Text,\n  View,\n  StyleSheet,\n  Alert,\n  RefreshControl,\n  Button,\n  Switch,\n  TouchableHighlight,\n} from \"react-native\";\nimport Card from \"../../../components/technical/Card\";\nimport { HeaderButtons, Item } from \"react-navigation-header-buttons\";\nimport HeaderButton from \"../../../components/technical/HeaderButton\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nimport { Ionicons } from \"@expo/vector-icons\";\nimport * as Animatable from \"react-native-animatable\";\nimport * as taskActions from \"../../../store/actions/tasks\";\n\nconst toDoListScreen = (props) => {\n  const trip = props.navigation.getParam(\"trip\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const [error, setError] = useState();\n  const tasks = useSelector((state) => state.tasks.toDoListTasks);\n  const [isEnabled, setIsEnabled] = useState(false);\n  const toggleSwitch = () => setIsEnabled((previousState) => !previousState);\n  const dispatch = useDispatch();\n\n  const [data, setData] = useState([]);\n\n  // setState({\n  //   data: [\n  //     ...this.state.data.slice(0, i),\n  //     Object.assign({}, this.state.data[i], { quantity: item.quantity + 1 }),\n  //     ...this.state.data.slice(i + 1)\n  //   ]\n  // });\n  const addNewTaskHandler = () => {};\n\n  const longPressHandler = (task) => {\n    Alert.alert(task.name, \"What do you want to do with?\", [\n      {\n        text: \"Delete\",\n        style: \"destructive\",\n        onPress: () => {\n          console.log(\"Deleting\");\n          console.log(task);\n          // dispatch(tripActions.deleteTrip(trip.id));\n        },\n      },\n      {\n        text: \"Edit\",\n        style: \"default\",\n        onPress: () => {\n          console.log(\"Editing\");\n          props.navigation.navigate(\"EditTask\", {\n            trip: trip,\n            task: task,\n          });\n        },\n      },\n      {\n        text: \"Cancel\",\n        style: \"cancel\",\n        onPress: () => {\n          console.log(\"Editing\");\n        },\n      },\n    ]);\n  };\n\n  const loadTasks = useCallback(async () => {\n    setError(null);\n    setIsRefreshing(true);\n    try {\n      await dispatch(taskActions.getTasks(trip.to_do_list));\n    } catch (err) {\n      setError(err.message);\n    }\n    setData();\n    setIsRefreshing(false);\n  }, [dispatch, setIsLoading, setError]);\n\n  useEffect(() => {\n    const willFocusSub = props.navigation.addListener(\"willFocus\", loadTasks);\n\n    return () => {\n      willFocusSub.remove();\n    };\n  }, [loadTasks]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    loadTasks().then(() => {\n      setIsLoading(false);\n    });\n  }, [dispatch, loadTasks]);\n\n  if (error) {\n    return (\n      <View style={styles.centered}>\n        <Text>An error occurred!</Text>\n        <Text>{error}</Text>\n        <Button title=\"Try again\" onPress={loadTasks} color=\"red\" />\n      </View>\n    );\n  }\n\n  if (!isLoading && tasks.length === 0) {\n    return (\n      <View style={styles.centered}>\n        <Text>No tasks found. Maybe start adding some!</Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.screen}>\n      <View style={styles.filterContainer}>\n        <View style={styles.filterContainerItem}>\n          <Text style={styles.destination}>Only my tasks</Text>\n        </View>\n        <View style={styles.filterContainerItem}>\n          <Switch\n            // trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\n            // thumbColor={isEnabled ? \"#f5dd4b\" : \"#f4f3f4\"}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={toggleSwitch}\n            value={isEnabled}\n          />\n        </View>\n      </View>\n      <FlatList\n        onRefresh={loadTasks}\n        refreshControl={\n          <RefreshControl\n            refreshing={isRefreshing}\n            onRefresh={loadTasks}\n            tintColor=\"#F2F2F7\"\n          />\n        }\n        refreshing={isRefreshing}\n        data={tasks}\n        extraData={refresh}\n        bounces={true}\n        keyExtractor={(item) => item.id}\n        renderItem={(itemData) => (\n          <View>\n            <Animatable.View\n              animation=\"bounceInLeft\"\n              iterationCount={1}\n              easing=\"linear\"\n            >\n              <Card style={styles.cartItem}>\n                <View style={styles.checkmarkContainer}>\n                  <TouchableOpacity\n                    onPress={() => {\n                      console.log(\"chekbox!!\");\n                      // itemData.item.ifDone = !itemData.item.ifDone;\n\n                      dispatch(\n                        taskActions.editTask(\n                          itemData.item.id,\n                          itemData.item.name,\n                          itemData.item.description,\n                          !itemData.item.ifDone,\n                          itemData.item.owner\n                        )\n                      );\n                      loadTasks();\n                    }}\n                  >\n                    <Ionicons\n                      name={\n                        itemData.item.ifDone === true\n                          ? \"ios-checkmark-circle\"\n                          : \"ios-radio-button-off\"\n                        // : \"ios-checkmark-circle-outline\"\n                      }\n                      size={32}\n                      color={itemData.item.ifDone === true ? \"#00D84D\" : \"grey\"}\n                    />\n                  </TouchableOpacity>\n                </View>\n                <View style={styles.contentContainer}>\n                  <TouchableOpacity\n                    onPress={() => {\n                      console.log(itemData.item);\n                      setRefresh(!refresh);\n                      tasks.forEach((task) => {\n                        if (task.id == itemData.item.id) {\n                          task.showDetails = !task.showDetails;\n                        }\n                      });\n                    }}\n                    onLongPress={(trip) => {\n                      // console.log(\"onLongPress: trip: \", itemData.item);\n                      // setEditMode(true);\n                      longPressHandler(itemData.item);\n                    }}\n                  >\n                    <View style={styles.nameContainer}>\n                      <Animatable.Text style={styles.title}>\n                        {itemData.item.name}\n                      </Animatable.Text>\n                      <View\n                        style={{\n                          borderTopColor: \"grey\",\n                          borderTopWidth: 1,\n\n                          // paddingHorizontal: 5,\n                          // marginHorizontal: 5,\n                          width: \"90%\",\n                          paddingTop: 10,\n                          paddingBottom: 10,\n                          // alignItems: \"center\",\n                          alignContent: \"center\",\n                          justifyContent: \"center\",\n                        }}\n                      >\n                        <Text style={styles.destination}>\n                          {itemData.item.ownerName}\n                        </Text>\n                      </View>\n\n                      {itemData.item.showDetails && (\n                        <Animatable.View\n                          animation=\"flipInX\"\n                          iterationCount={1}\n                          easing=\"linear\"\n                          style={{\n                            borderTopColor: \"grey\",\n                            borderTopWidth: 1,\n                            width: \"90%\",\n\n                            paddingTop: 10,\n                            // alignItems: \"center\",\n                            alignContent: \"center\",\n                            justifyContent: \"center\",\n                          }}\n                        >\n                          <Text style={styles.destination}>\n                            Desciption: {itemData.item.description}\n                          </Text>\n                        </Animatable.View>\n                      )}\n                    </View>\n                  </TouchableOpacity>\n                </View>\n              </Card>\n            </Animatable.View>\n          </View>\n        )}\n      />\n    </View>\n  );\n};\n\ntoDoListScreen.navigationOptions = (navData) => {\n  const trip = navData.navigation.getParam(\"trip\");\n\n  return {\n    headerTitle: \"To do list\",\n    headerLeft: () => (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          buttonStyle={{ color: \"#147efb\" }}\n          title=\"Menu\"\n          iconName={Platform.OS === \"android\" ? \"md-menu\" : \"ios-menu\"}\n          onPress={() => {\n            navData.navigation.toggleDrawer();\n          }}\n        />\n      </HeaderButtons>\n    ),\n    headerRight: () => (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          buttonStyle={{ color: \"#147efb\" }}\n          title=\"Add\"\n          // iconName={isEditMode ? \"ios-save\" : \"ios-add\"}\n          iconName=\"ios-add-circle-outline\"\n          onPress={() => {\n            navData.navigation.navigate(\"EditTask\", { trip: trip, task: -1 });\n          }}\n        />\n      </HeaderButtons>\n    ),\n  };\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    backgroundColor: \"#2C2C2E\",\n    justifyContent: \"flex-start\",\n  },\n  filterContainer: {\n    flex: 1,\n    height: 30,\n    maxHeight: 50,\n    flexDirection: \"row\",\n    paddingTop: 10,\n    // alignItems: \"flex-start\",\n    justifyContent: \"space-between\",\n    alignContent: \"space-around\",\n  },\n  filterContainerItem: {\n    alignSelf: \"center\",\n    paddingHorizontal: 25,\n  },\n  cartItem: {\n    padding: 10,\n    backgroundColor: \"black\",\n    // flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"stretch\",\n    alignContent: \"stretch\",\n    marginHorizontal: 20,\n    marginTop: 20,\n    minHeight: 75,\n    flex: 1,\n    flexDirection: \"row\",\n  },\n  checkmarkContainer: {\n    width: \"15%\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    paddingLeft: 3,\n  },\n  contentContainer: {\n    width: \"85%\",\n  },\n  nameContainer: {\n    flex: 1,\n    // flexWrap: \"wrap\",\n    // flexShrink: 1,\n    alignItems: \"flex-start\",\n    justifyContent: \"center\",\n  },\n  title: {\n    textTransform: \"uppercase\",\n    fontSize: 18,\n    fontWeight: \"bold\",\n    letterSpacing: 1,\n    padding: 5,\n    color: \"white\",\n    // borderColor: \"red\",\n    // borderWidth: 2,\n    borderBottomColor: \"blue\",\n    borderBottomWidth: 2,\n    flexWrap: \"wrap\",\n    // width: \"90%\",\n  },\n  dateText: {\n    fontSize: 17,\n    letterSpacing: 1,\n    padding: 5,\n    color: \"#F2F2F7\",\n  },\n  destination: {\n    fontSize: 17,\n    letterSpacing: 1,\n    fontWeight: \"bold\",\n    paddingLeft: 5,\n    color: \"#F2F2F7\",\n  },\n\n  container: {\n    flex: 1,\n    paddingTop: 20,\n  },\n  listItem: {\n    height: 75,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n\nexport default toDoListScreen;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.container = void 0;\n\nvar react_native_1 = require(\"react-native-web/dist/index\");\n\nvar react_native_helpers_1 = require(\"@freakycoder/react-native-helpers\");\n\nexports.container = function (loginButtonBackgroundColor) {\n  return {\n    marginBottom: 32,\n    width: react_native_helpers_1.ScreenWidth,\n    height: react_native_helpers_1.ScreenHeight,\n    backgroundColor: loginButtonBackgroundColor\n  };\n};\n\nexports.default = react_native_1.StyleSheet.create({\n  spinnerStyle: {\n    left: 0,\n    right: 0,\n    zIndex: 9,\n    height: 50,\n    position: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    bottom: react_native_helpers_1.isIPhoneXFamily() ? 24 : 12\n  },\n  loginButtonStyle: {\n    left: 0,\n    right: 0,\n    zIndex: 9,\n    height: 50,\n    position: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    bottom: react_native_helpers_1.isAndroid ? 24 : react_native_helpers_1.isIPhoneXFamily() ? 24 : 12\n  },\n  loginButtonTextStyle: {\n    color: \"white\",\n    fontSize: 15\n  },\n  imageBackgroundStyle: _objectSpread({\n    flex: 1,\n    zIndex: -1,\n    width: react_native_helpers_1.ScreenWidth,\n    height: react_native_helpers_1.ScreenHeight * 0.9\n  }, react_native_1.StyleSheet.absoluteFillObject),\n  blackoverlay: {\n    width: react_native_helpers_1.ScreenWidth,\n    height: react_native_helpers_1.ScreenHeight,\n    backgroundColor: \"rgba(0,0,0,0.1)\"\n  },\n  safeAreaViewStyle: {\n    flex: 1\n  },\n  logoContainer: {\n    marginTop: 12\n  }\n});","map":{"version":3,"sources":["../../lib/LoginScreen.style.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AACA,IAAA,sBAAA,GAAA,OAAA,CAAA,mCAAA,CAAA;;AAiBa,OAAA,CAAA,SAAA,GAAY,UAAC,0BAAD,EAAuC;AAC9D,SAAO;AACL,IAAA,YAAY,EAAE,EADT;AAEL,IAAA,KAAK,EAAE,sBAAA,CAAA,WAFF;AAGL,IAAA,MAAM,EAAE,sBAAA,CAAA,YAHH;AAIL,IAAA,eAAe,EAAE;AAJZ,GAAP;AAMD,CAPY;;AASb,OAAA,CAAA,OAAA,GAAe,cAAA,CAAA,UAAA,CAAW,MAAX,CAAyB;AACtC,EAAA,YAAY,EAAE;AACZ,IAAA,IAAI,EAAE,CADM;AAEZ,IAAA,KAAK,EAAE,CAFK;AAGZ,IAAA,MAAM,EAAE,CAHI;AAIZ,IAAA,MAAM,EAAE,EAJI;AAKZ,IAAA,QAAQ,EAAE,UALE;AAMZ,IAAA,UAAU,EAAE,QANA;AAOZ,IAAA,cAAc,EAAE,QAPJ;AAQZ,IAAA,MAAM,EAAE,sBAAA,CAAA,eAAA,KAAoB,EAApB,GAAyB;AARrB,GADwB;AAWtC,EAAA,gBAAgB,EAAE;AAChB,IAAA,IAAI,EAAE,CADU;AAEhB,IAAA,KAAK,EAAE,CAFS;AAGhB,IAAA,MAAM,EAAE,CAHQ;AAIhB,IAAA,MAAM,EAAE,EAJQ;AAKhB,IAAA,QAAQ,EAAE,UALM;AAMhB,IAAA,UAAU,EAAE,QANI;AAOhB,IAAA,cAAc,EAAE,QAPA;AAQhB,IAAA,MAAM,EAAE,sBAAA,CAAA,SAAA,GAAY,EAAZ,GAAiB,sBAAA,CAAA,eAAA,KAAoB,EAApB,GAAyB;AARlC,GAXoB;AAqBtC,EAAA,oBAAoB,EAAE;AACpB,IAAA,KAAK,EAAE,OADa;AAEpB,IAAA,QAAQ,EAAE;AAFU,GArBgB;AAyBtC,EAAA,oBAAoB;AAClB,IAAA,IAAI,EAAE,CADY;AAElB,IAAA,MAAM,EAAE,CAAC,CAFS;AAGlB,IAAA,KAAK,EAAE,sBAAA,CAAA,WAHW;AAIlB,IAAA,MAAM,EAAE,sBAAA,CAAA,YAAA,GAAe;AAJL,KAKf,cAAA,CAAA,UAAA,CAAW,kBALI,CAzBkB;AAgCtC,EAAA,YAAY,EAAE;AACZ,IAAA,KAAK,EAAE,sBAAA,CAAA,WADK;AAEZ,IAAA,MAAM,EAAE,sBAAA,CAAA,YAFI;AAGZ,IAAA,eAAe,EAAE;AAHL,GAhCwB;AAqCtC,EAAA,iBAAiB,EAAE;AACjB,IAAA,IAAI,EAAE;AADW,GArCmB;AAwCtC,EAAA,aAAa,EAAE;AACb,IAAA,SAAS,EAAE;AADE;AAxCuB,CAAzB,CAAf","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.container = void 0;\nconst react_native_1 = require(\"react-native\");\nconst react_native_helpers_1 = require(\"@freakycoder/react-native-helpers\");\nexports.container = (loginButtonBackgroundColor) => {\n    return {\n        marginBottom: 32,\n        width: react_native_helpers_1.ScreenWidth,\n        height: react_native_helpers_1.ScreenHeight,\n        backgroundColor: loginButtonBackgroundColor,\n    };\n};\nexports.default = react_native_1.StyleSheet.create({\n    spinnerStyle: {\n        left: 0,\n        right: 0,\n        zIndex: 9,\n        height: 50,\n        position: \"absolute\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        bottom: react_native_helpers_1.isIPhoneXFamily() ? 24 : 12,\n    },\n    loginButtonStyle: {\n        left: 0,\n        right: 0,\n        zIndex: 9,\n        height: 50,\n        position: \"absolute\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        bottom: react_native_helpers_1.isAndroid ? 24 : react_native_helpers_1.isIPhoneXFamily() ? 24 : 12,\n    },\n    loginButtonTextStyle: {\n        color: \"white\",\n        fontSize: 15,\n    },\n    imageBackgroundStyle: {\n        flex: 1,\n        zIndex: -1,\n        width: react_native_helpers_1.ScreenWidth,\n        height: react_native_helpers_1.ScreenHeight * 0.9,\n        ...react_native_1.StyleSheet.absoluteFillObject,\n    },\n    blackoverlay: {\n        width: react_native_helpers_1.ScreenWidth,\n        height: react_native_helpers_1.ScreenHeight,\n        backgroundColor: \"rgba(0,0,0,0.1)\",\n    },\n    safeAreaViewStyle: {\n        flex: 1,\n    },\n    logoContainer: {\n        marginTop: 12,\n    },\n});\n//# sourceMappingURL=LoginScreen.style.js.map"]},"metadata":{},"sourceType":"script"}
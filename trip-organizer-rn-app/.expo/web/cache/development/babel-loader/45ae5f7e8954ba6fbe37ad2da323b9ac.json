{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var ADD_EVENT = \"ADD_EVENT\";\nexport var EDIT_EVENT = \"EDIT_EVENT\";\nexport var GET_TRIP_EVENTS = \"GET_TRIP_EVENTS\";\nexport var DELETE_EVENT = \"DELETE_EVENT\";\nimport { auth, database } from \"../../firebase\";\nexport var addEvent = function addEvent(eventName, eventDesc, eventDate, eventTime, tripParent) {\n  return function _callee(dispatch, getState) {\n    var newEventKey, updates;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            newEventKey = database.ref().child(\"events\").push().key;\n            updates = {};\n            updates[\"events/\" + newEventKey] = {\n              title: eventName,\n              description: eventDesc,\n              date: eventDate,\n              time: eventTime\n            };\n            updates[\"trips/\" + tripParent + \"/events/\" + newEventKey] = 1;\n            database.ref().update(updates);\n            dispatch({\n              type: ADD_EVENT,\n              eventData: {\n                title: eventName,\n                description: eventDesc,\n                date: eventDate,\n                time: eventTime\n              }\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var editEvent = function editEvent(eventId, eventName, eventDesc, eventDate, eventTime) {\n  return function _callee2(dispatch, getState) {\n    var updates;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            updates = {};\n            updates[\"events/\" + eventId + \"/title\"] = eventName;\n            updates[\"events/\" + eventId + \"/description\"] = eventDesc;\n            updates[\"events/\" + eventId + \"/date\"] = eventDate;\n            updates[\"events/\" + eventId + \"/time\"] = eventTime;\n            database.ref().update(updates);\n            dispatch({\n              type: EDIT_EVENT,\n              eventData: {\n                id: eventId,\n                title: eventName,\n                description: eventDesc,\n                date: eventDate,\n                time: eventTime\n              }\n            });\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var getEvents = function getEvents(tripId) {\n  return function _callee5(dispatch, getState) {\n    var tripEvents, response;\n    return _regeneratorRuntime.async(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            tripEvents = [];\n            _context5.next = 3;\n            return _regeneratorRuntime.awrap(database.ref(\"trips/\" + tripId + \"/events\").once(\"value\").then(function _callee4(dataSnapshot) {\n              var data, key;\n              return _regeneratorRuntime.async(function _callee4$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      data = JSON.parse(JSON.stringify(dataSnapshot));\n                      _context4.t0 = _regeneratorRuntime.keys(data);\n\n                    case 2:\n                      if ((_context4.t1 = _context4.t0()).done) {\n                        _context4.next = 9;\n                        break;\n                      }\n\n                      key = _context4.t1.value;\n\n                      if (!data.hasOwnProperty(key)) {\n                        _context4.next = 7;\n                        break;\n                      }\n\n                      _context4.next = 7;\n                      return _regeneratorRuntime.awrap(function _callee3() {\n                        var eventId, nestedResponse;\n                        return _regeneratorRuntime.async(function _callee3$(_context3) {\n                          while (1) {\n                            switch (_context3.prev = _context3.next) {\n                              case 0:\n                                eventId = key;\n                                _context3.next = 3;\n                                return _regeneratorRuntime.awrap(database.ref(\"events/\" + eventId).once(\"value\").then(function (dataSnapshot) {\n                                  console.log(dataSnapshot);\n                                  tripEvents.push(_objectSpread(_objectSpread({}, JSON.parse(JSON.stringify(dataSnapshot))), {}, {\n                                    id: eventId\n                                  }));\n                                }));\n\n                              case 3:\n                                nestedResponse = _context3.sent;\n\n                              case 4:\n                              case \"end\":\n                                return _context3.stop();\n                            }\n                          }\n                        }, null, null, null, Promise);\n                      }());\n\n                    case 7:\n                      _context4.next = 2;\n                      break;\n\n                    case 9:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }));\n\n          case 3:\n            response = _context5.sent;\n            console.log(\"ACTION EVENTS:\");\n            console.log(tripEvents);\n            dispatch({\n              type: GET_TRIP_EVENTS,\n              tripEvents: tripEvents\n            });\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var deleteEvent = function deleteEvent(eventId, tripId) {\n  return function _callee6(dispatch, getState) {\n    var tripToDeleteRef;\n    return _regeneratorRuntime.async(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _regeneratorRuntime.awrap(database.ref(\"events/\" + eventId).remove().then(function () {\n              console.log(\"Remove succeeded.\");\n            }).catch(function (error) {\n              console.log(\"Remove failed: \" + error.message);\n            }));\n\n          case 2:\n            tripToDeleteRef = _context6.sent;\n            _context6.next = 5;\n            return _regeneratorRuntime.awrap(database.ref(\"trips/\" + tripId + \"/events/\" + eventId).remove().then(function () {\n              console.log(\"Remove succeeded.\");\n            }).catch(function (error) {\n              console.log(\"Remove failed: \" + error.message);\n            }));\n\n          case 5:\n            eventToDeleteRef = _context6.sent;\n            dispatch({\n              type: DELETE_EVENT,\n              eventId: eventId\n            });\n\n          case 7:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["/Users/szymongruszczynski/Documents/INZYNIERKA/repo_dir/trip-organizer/trip-organizer-rn-app/store/actions/events.js"],"names":["ADD_EVENT","EDIT_EVENT","GET_TRIP_EVENTS","DELETE_EVENT","auth","database","addEvent","eventName","eventDesc","eventDate","eventTime","tripParent","dispatch","getState","newEventKey","ref","child","push","key","updates","title","description","date","time","update","type","eventData","editEvent","eventId","id","getEvents","tripId","tripEvents","once","then","dataSnapshot","data","JSON","parse","stringify","hasOwnProperty","console","log","nestedResponse","response","deleteEvent","remove","catch","error","message","tripToDeleteRef","eventToDeleteRef"],"mappings":"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","sourcesContent":["export const ADD_EVENT = \"ADD_EVENT\";\nexport const EDIT_EVENT = \"EDIT_EVENT\";\nexport const GET_TRIP_EVENTS = \"GET_TRIP_EVENTS\";\nexport const DELETE_EVENT = \"DELETE_EVENT\";\n\nimport { auth, database } from \"../../firebase\";\n// import trips from \"../reducers/trips\";\n\nexport const addEvent = (\n  eventName,\n  eventDesc,\n  eventDate,\n  eventTime,\n  tripParent\n) => {\n  return async (dispatch, getState) => {\n    const newEventKey = database.ref().child(\"events\").push().key;\n\n    var updates = {};\n    updates[\"events/\" + newEventKey] = {\n      title: eventName,\n      description: eventDesc,\n      date: eventDate,\n      time: eventTime,\n    };\n    updates[\"trips/\" + tripParent + \"/events/\" + newEventKey] = 1;\n    database.ref().update(updates);\n\n    //te dwa pushe mozna przerobic do tablicy updates\n\n    dispatch({\n      type: ADD_EVENT,\n      eventData: {\n        title: eventName,\n        description: eventDesc,\n        date: eventDate,\n        time: eventTime,\n      },\n    });\n  };\n};\n\nexport const editEvent = (\n  eventId,\n  eventName,\n  eventDesc,\n  eventDate,\n  eventTime\n) => {\n  return async (dispatch, getState) => {\n    var updates = {};\n    updates[\"events/\" + eventId + \"/title\"] = eventName;\n    updates[\"events/\" + eventId + \"/description\"] = eventDesc;\n    updates[\"events/\" + eventId + \"/date\"] = eventDate;\n    updates[\"events/\" + eventId + \"/time\"] = eventTime;\n\n    database.ref().update(updates);\n\n    dispatch({\n      type: EDIT_EVENT,\n      eventData: {\n        id: eventId,\n        title: eventName,\n        description: eventDesc,\n        date: eventDate,\n        time: eventTime,\n      },\n    });\n  };\n};\n\nexport const getEvents = (tripId) => {\n  return async (dispatch, getState) => {\n    let tripEvents = [];\n\n    const response = await database\n      .ref(\"trips/\" + tripId + \"/events\")\n      .once(\"value\")\n      .then(async function (dataSnapshot) {\n        const data = JSON.parse(JSON.stringify(dataSnapshot));\n        for (var key in data) {\n          if (data.hasOwnProperty(key)) {\n            const eventId = key;\n            const nestedResponse = await database\n              .ref(\"events/\" + eventId)\n              .once(\"value\")\n              .then(function (dataSnapshot) {\n                console.log(dataSnapshot);\n                tripEvents.push({\n                  ...JSON.parse(JSON.stringify(dataSnapshot)),\n                  id: eventId,\n                });\n              });\n          }\n        }\n      });\n    console.log(\"ACTION EVENTS:\");\n    console.log(tripEvents);\n\n    dispatch({\n      type: GET_TRIP_EVENTS,\n      tripEvents: tripEvents,\n    });\n  };\n};\n\nexport const deleteEvent = (eventId, tripId) => {\n  return async (dispatch, getState) => {\n    var tripToDeleteRef = await database\n      .ref(\"events/\" + eventId)\n      .remove()\n      .then(function () {\n        console.log(\"Remove succeeded.\");\n      })\n      .catch(function (error) {\n        console.log(\"Remove failed: \" + error.message);\n      });\n\n    eventToDeleteRef = await database\n      .ref(\"trips/\" + tripId + \"/events/\" + eventId)\n      .remove()\n      .then(function () {\n        console.log(\"Remove succeeded.\");\n      })\n      .catch(function (error) {\n        console.log(\"Remove failed: \" + error.message);\n      });\n\n    dispatch({\n      type: DELETE_EVENT,\n      eventId: eventId,\n    });\n  };\n};\n\n// Artykuł jak pobierac dane tripy dla jednego usera\n// https://medium.com/@justintulk/how-to-query-arrays-of-data-in-firebase-aa28a90181bad\n//\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/szymongruszczynski/Documents/INZYNIERKA/repo_dir/trip-organizer/trip-organizer-rn-app/navigation/AppNavigator.js\";\n\nimport React from \"react\";\nimport { createSwitchNavigator, createAppContainer } from \"react-navigation\";\nimport { createStackNavigator } from \"react-navigation-stack\";\nimport { createBottomTabNavigator } from \"react-navigation-tabs\";\nimport { createDrawerNavigator, DrawerItems } from \"react-navigation-drawer\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { useDispatch } from \"react-redux\";\nimport * as authActions from \"../store/actions/auth\";\nimport { auth, database } from \"../firebase\";\nimport Colors from \"../constants/Colors\";\nimport StartupScreen from \"../screens/StartupScreen\";\nimport authenticationScreen from \"../screens/authentication/authenticationScreen\";\nimport userProfileScreen from \"../screens/user_profile/userProfileScreen\";\nimport editUserProfileScreen from \"../screens/user_profile/editUserProfileScreen\";\nimport tripListScreen from \"../screens/trip/tripListScreen\";\nimport editTripListScreen from \"../screens/trip/editTripListScreen\";\nimport tripDestinationScreen from \"../screens/trip/tripDestinationScreen\";\nimport tripTimeScreen from \"../screens/trip/tripTimeScreen\";\nimport addMembersScreen from \"../screens/trip/addMembersScreen\";\nimport tripNameScreen from \"../screens/trip/tripNameScreen\";\nimport mainMenuScreen from \"../screens/technical/mainMenuScreen\";\nimport currencyExchangeScreen from \"../screens/features/currency_exchange/currencyExchangeScreen\";\nimport toDoListScreen from \"../screens/features/to_do_list/toDoListScreen\";\nimport editTaskScreen from \"../screens/features/to_do_list/editTaskScreen\";\nimport tripMembersScreen from \"../screens/features/trip_members/tripMembersScreen\";\nimport tripTimelineScreen from \"../screens/features/trip_timeline/tripTimelineScreen\";\nimport eventDataScreen from \"../screens/features/trip_timeline/eventDataScreen\";\nimport eventTimeScreen from \"../screens/features/trip_timeline/eventTimeScreen\";\nvar defaultNavOptions = {\n  headerStyle: {\n    backgroundColor: \"black\",\n    shadowRadius: 0,\n    shadowOffset: {\n      height: 0\n    }\n  },\n  headerTitleStyle: {\n    fontFamily: \"open-sans-bold\",\n    color: \"#F2F2F7\"\n  },\n  headerBackTitleStyle: {\n    fontFamily: \"open-sans\",\n    color: \"#147efb\"\n  },\n  headerTintColor: \"#147efb\"\n};\nvar AppNavigator = createStackNavigator({\n  TripList: tripListScreen,\n  EditTripList: editTripListScreen,\n  TripDestination: tripDestinationScreen,\n  TripTime: tripTimeScreen,\n  AddMembers: addMembersScreen,\n  TripName: tripNameScreen,\n  MainMenu: mainMenuScreen,\n  CurrencyExchange: currencyExchangeScreen,\n  ToDoList: toDoListScreen,\n  TripMembers: tripMembersScreen,\n  TripTimeline: tripTimelineScreen,\n  EventData: eventDataScreen,\n  EventTime: eventTimeScreen,\n  EditTask: editTaskScreen\n}, {\n  defaultNavigationOptions: defaultNavOptions\n});\nvar SettingsNavigator = createStackNavigator({\n  UserProfile: userProfileScreen,\n  EditUserProfile: editUserProfileScreen\n}, {\n  defaultNavigationOptions: defaultNavOptions\n});\nvar MainTabsNavigator = createBottomTabNavigator({\n  App: {\n    screen: AppNavigator,\n    navigationOptions: {\n      tabBarLabel: \"Trip\",\n      tabBarIcon: function tabBarIcon(_ref) {\n        var tintColor = _ref.tintColor;\n        return React.createElement(Image, {\n          source: require(\"../assets/icons/trip.png\"),\n          style: {\n            width: 26,\n            height: 26,\n            tintColor: tintColor\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }\n        });\n      }\n    }\n  },\n  Settings: {\n    screen: SettingsNavigator,\n    navigationOptions: {\n      tabBarLabel: \"Profile\",\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var tintColor = _ref2.tintColor;\n        return React.createElement(Image, {\n          source: require(\"../assets/icons/user-profile.png\"),\n          style: {\n            width: 26,\n            height: 26,\n            tintColor: tintColor\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }\n        });\n      }\n    }\n  }\n}, {\n  tabBarOptions: {\n    style: {\n      backgroundColor: \"black\",\n      borderTopColor: \"transparent\"\n    }\n  }\n});\nvar DrawerNavigator = createDrawerNavigator({\n  MainTabs: MainTabsNavigator\n}, {\n  contentOptions: {\n    activeTintColor: Colors.primary\n  },\n  contentComponent: function contentComponent(props) {\n    var dispatch = useDispatch();\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        paddingTop: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }, React.createElement(SafeAreaView, {\n      forceInset: {\n        top: \"always\",\n        horizontal: \"never\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    }, React.createElement(DrawerItems, _extends({}, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    })), React.createElement(Image, {\n      source: require(\"../assets/icons/logout.png\"),\n      style: {\n        width: 26,\n        height: 26,\n        tintColor: \"red\",\n        alignSelf: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }), React.createElement(Button, {\n      title: \"Logout\",\n      color: \"red\",\n      onPress: function onPress() {\n        auth.signOut().then(function () {\n          console.log(\"Wylogowano poprawnie\");\n        }).catch(function (error) {\n          console.log(\"Błąd przy wylogowywaniu\");\n        });\n        dispatch(authActions.logout());\n        props.navigation.navigate(\"Auth\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    })));\n  }\n});\nvar MainNavigator = createSwitchNavigator({\n  Startup: StartupScreen,\n  Auth: authenticationScreen,\n  Drawer: DrawerNavigator\n});\nexport default createAppContainer(MainNavigator);","map":{"version":3,"sources":["/Users/szymongruszczynski/Documents/INZYNIERKA/repo_dir/trip-organizer/trip-organizer-rn-app/navigation/AppNavigator.js"],"names":["React","createSwitchNavigator","createAppContainer","createStackNavigator","createBottomTabNavigator","createDrawerNavigator","DrawerItems","Ionicons","useDispatch","authActions","auth","database","Colors","StartupScreen","authenticationScreen","userProfileScreen","editUserProfileScreen","tripListScreen","editTripListScreen","tripDestinationScreen","tripTimeScreen","addMembersScreen","tripNameScreen","mainMenuScreen","currencyExchangeScreen","toDoListScreen","editTaskScreen","tripMembersScreen","tripTimelineScreen","eventDataScreen","eventTimeScreen","defaultNavOptions","headerStyle","backgroundColor","shadowRadius","shadowOffset","height","headerTitleStyle","fontFamily","color","headerBackTitleStyle","headerTintColor","AppNavigator","TripList","EditTripList","TripDestination","TripTime","AddMembers","TripName","MainMenu","CurrencyExchange","ToDoList","TripMembers","TripTimeline","EventData","EventTime","EditTask","defaultNavigationOptions","SettingsNavigator","UserProfile","EditUserProfile","MainTabsNavigator","App","screen","navigationOptions","tabBarLabel","tabBarIcon","tintColor","require","width","Settings","tabBarOptions","style","borderTopColor","DrawerNavigator","MainTabs","contentOptions","activeTintColor","primary","contentComponent","props","dispatch","flex","paddingTop","top","horizontal","alignSelf","signOut","then","console","log","catch","error","logout","navigation","navigate","MainNavigator","Startup","Auth","Drawer"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { createSwitchNavigator, createAppContainer } from \"react-navigation\";\nimport { createStackNavigator } from \"react-navigation-stack\";\nimport { createBottomTabNavigator } from \"react-navigation-tabs\";\nimport { createDrawerNavigator, DrawerItems } from \"react-navigation-drawer\";\n// import  from \"react-navigation-switch\";\n\nimport {\n  Platform,\n  SafeAreaView,\n  Button,\n  View,\n  Text,\n  Image,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { useDispatch } from \"react-redux\";\n\nimport * as authActions from \"../store/actions/auth\";\nimport { auth, database } from \"../firebase\";\n\nimport Colors from \"../constants/Colors\";\n\nimport StartupScreen from \"../screens/StartupScreen\";\nimport authenticationScreen from \"../screens/authentication/authenticationScreen\";\nimport userProfileScreen from \"../screens/user_profile/userProfileScreen\";\nimport editUserProfileScreen from \"../screens/user_profile/editUserProfileScreen\";\nimport tripListScreen from \"../screens/trip/tripListScreen\";\nimport editTripListScreen from \"../screens/trip/editTripListScreen\";\nimport tripDestinationScreen from \"../screens/trip/tripDestinationScreen\";\nimport tripTimeScreen from \"../screens/trip/tripTimeScreen\";\nimport addMembersScreen from \"../screens/trip/addMembersScreen\";\nimport tripNameScreen from \"../screens/trip/tripNameScreen\";\nimport mainMenuScreen from \"../screens/technical/mainMenuScreen\";\nimport currencyExchangeScreen from \"../screens/features/currency_exchange/currencyExchangeScreen\";\nimport toDoListScreen from \"../screens/features/to_do_list/toDoListScreen\";\nimport editTaskScreen from \"../screens/features/to_do_list/editTaskScreen\";\nimport tripMembersScreen from \"../screens/features/trip_members/tripMembersScreen\";\nimport tripTimelineScreen from \"../screens/features/trip_timeline/tripTimelineScreen\";\nimport eventDataScreen from \"../screens/features/trip_timeline/eventDataScreen\";\nimport eventTimeScreen from \"../screens/features/trip_timeline/eventTimeScreen\";\n\nconst defaultNavOptions = {\n  headerStyle: {\n    backgroundColor: \"black\",\n    // borderBottomWidth: \"0\",\n    shadowRadius: 0,\n    shadowOffset: {\n      height: 0,\n    },\n  },\n  headerTitleStyle: {\n    fontFamily: \"open-sans-bold\",\n    color: \"#F2F2F7\",\n  },\n  headerBackTitleStyle: {\n    fontFamily: \"open-sans\",\n    color: \"#147efb\",\n  },\n  headerTintColor: \"#147efb\",\n};\n\nconst AppNavigator = createStackNavigator(\n  {\n    TripList: tripListScreen,\n    EditTripList: editTripListScreen,\n    TripDestination: tripDestinationScreen,\n    TripTime: tripTimeScreen,\n    AddMembers: addMembersScreen,\n    TripName: tripNameScreen,\n    MainMenu: mainMenuScreen,\n    CurrencyExchange: currencyExchangeScreen,\n    ToDoList: toDoListScreen,\n    TripMembers: tripMembersScreen,\n    TripTimeline: tripTimelineScreen,\n    EventData: eventDataScreen,\n    EventTime: eventTimeScreen,\n    EditTask: editTaskScreen,\n  },\n  {\n    defaultNavigationOptions: defaultNavOptions,\n  }\n);\n\nconst SettingsNavigator = createStackNavigator(\n  {\n    UserProfile: userProfileScreen,\n    EditUserProfile: editUserProfileScreen,\n  },\n  {\n    defaultNavigationOptions: defaultNavOptions,\n  }\n);\n\nconst MainTabsNavigator = createBottomTabNavigator(\n  {\n    App: {\n      screen: AppNavigator,\n      navigationOptions: {\n        tabBarLabel: \"Trip\",\n        tabBarIcon: ({ tintColor }) => (\n          <Image\n            source={require(\"../assets/icons/trip.png\")} //Icons made by Freepik \"https://www.flaticon.com/authors/freepik\"\n            style={{ width: 26, height: 26, tintColor: tintColor }}\n          />\n        ),\n      },\n    },\n\n    Settings: {\n      screen: SettingsNavigator,\n      navigationOptions: {\n        tabBarLabel: \"Profile\",\n        tabBarIcon: ({ tintColor }) => (\n          <Image\n            source={require(\"../assets/icons/user-profile.png\")} //Icons made by Freepik \"https://www.flaticon.com/authors/freepik\"\n            style={{ width: 26, height: 26, tintColor: tintColor }}\n          />\n        ),\n      },\n    },\n  },\n  {\n    tabBarOptions: {\n      style: {\n        backgroundColor: \"black\",\n        borderTopColor: \"transparent\",\n      },\n    },\n  }\n  //   {\n  //     contentOptions: {\n  //       activeTintColor: Colors.primary,\n  //     },\n  //     contentComponent: (props) => {\n  //       const dispatch = useDispatch();\n  //       return (\n  //         <View style={{ flex: 1, paddingTop: 20 }}>\n  //           <SafeAreaView forceInset={{ top: \"always\", horizontal: \"never\" }}>\n  //             <DrawerItems {...props} />\n  //             <Button\n  //               title=\"Logout\"\n  //               color={Colors.primary}\n  //               onPress={() => {\n  //                 dispatch(authActions.logout());\n  //                 // props.navigation.navigate('Auth');\n  //               }}\n  //             />\n  //           </SafeAreaView>\n  //         </View>\n  //       );\n  //     },\n  //   }\n);\n\n// const AuthNavigator = createStackNavigator(\n//   {\n//     SignIn: signInScreen,\n//     SignUp: signUpScreen,\n//   },\n//   {\n//     header: null,\n//   }\n// );\nconst DrawerNavigator = createDrawerNavigator(\n  {\n    MainTabs: MainTabsNavigator,\n  },\n  {\n    contentOptions: {\n      activeTintColor: Colors.primary,\n    },\n    contentComponent: (props) => {\n      const dispatch = useDispatch();\n      return (\n        <View style={{ flex: 1, paddingTop: 20 }}>\n          <SafeAreaView forceInset={{ top: \"always\", horizontal: \"never\" }}>\n            <DrawerItems {...props} />\n            <Image\n              source={require(\"../assets/icons/logout.png\")} //Icons made by Freepik \"https://www.flaticon.com/authors/freepik\"\n              style={{\n                width: 26,\n                height: 26,\n                tintColor: \"red\",\n                alignSelf: \"center\",\n              }}\n            />\n            <Button\n              title=\"Logout\"\n              color=\"red\" //{Colors.primary}\n              onPress={() => {\n                auth\n                  .signOut()\n                  .then(function () {\n                    console.log(\"Wylogowano poprawnie\");\n                  })\n                  .catch(function (error) {\n                    console.log(\"Błąd przy wylogowywaniu\");\n                  });\n                dispatch(authActions.logout());\n                props.navigation.navigate(\"Auth\");\n              }}\n            />\n          </SafeAreaView>\n        </View>\n      );\n    },\n  }\n);\n\nconst MainNavigator = createSwitchNavigator({\n  Startup: StartupScreen,\n  Auth: authenticationScreen,\n  Drawer: DrawerNavigator,\n});\n\nexport default createAppContainer(MainNavigator);\n"]},"metadata":{},"sourceType":"module"}
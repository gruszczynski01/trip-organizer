{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/szymongruszczynski/Documents/INZYNIERKA/repo_dir/trip-organizer/trip-organizer-rn-app/screens/trip/tripListScreen.js\";\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Card from \"../../components/technical/Card\";\nimport { HeaderButtons, Item } from \"react-navigation-header-buttons\";\nimport HeaderButton from \"../../components/technical/HeaderButton\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport Colors from \"../../constants/Colors\";\nimport Moment from \"moment\";\nimport * as Animatable from \"react-native-animatable\";\nimport * as tripActions from \"../../store/actions/trips\";\n\nvar tripListScreen = function tripListScreen(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isRefreshing = _useState4[0],\n      setIsRefreshing = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var trips = useSelector(function (state) {\n    return state.trips.userTrips;\n  });\n  var dispatch = useDispatch();\n\n  var longPressHandler = function longPressHandler(trip) {\n    Alert.alert(trip.name, \"What do you want to do with?\", [{\n      text: \"Delete\",\n      style: \"destructive\",\n      onPress: function onPress() {\n        console.log(\"Deleting\");\n        console.log(trip);\n        dispatch(tripActions.deleteTrip(trip.id));\n      }\n    }, {\n      text: \"Edit\",\n      style: \"default\",\n      onPress: function onPress() {\n        console.log(\"Editing\");\n        props.navigation.navigate(\"TripDestination\", {\n          trip: trip\n        });\n      }\n    }, {\n      text: \"Cancel\",\n      style: \"cancel\",\n      onPress: function onPress() {\n        console.log(\"Editing\");\n      }\n    }]);\n  };\n\n  var loadTrips = useCallback(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setError(null);\n            setIsRefreshing(true);\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(dispatch(tripActions.getTrips()));\n\n          case 5:\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](2);\n            setError(_context.t0.message);\n\n          case 10:\n            setIsRefreshing(false);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 7]], Promise);\n  }, [dispatch, setIsLoading, setError]);\n  useEffect(function () {\n    var willFocusSub = props.navigation.addListener(\"willFocus\", loadTrips);\n    return function () {\n      willFocusSub.remove();\n    };\n  }, [loadTrips]);\n  useEffect(function () {\n    setIsLoading(true);\n    loadTrips().then(function () {\n      setIsLoading(false);\n    });\n  }, [dispatch, loadTrips]);\n\n  if (error) {\n    return React.createElement(View, {\n      style: styles.centered,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, \"An error occurred!\"), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, error), React.createElement(Button, {\n      title: \"Try again\",\n      onPress: loadTrips,\n      color: \"red\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  if (!isLoading && trips.length === 0) {\n    return React.createElement(View, {\n      style: styles.centered,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, \"No trips found. Maybe start adding some!\"));\n  }\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    onRefresh: loadTrips,\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: isRefreshing,\n      onRefresh: loadTrips,\n      tintColor: \"#F2F2F7\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }),\n    refreshing: isRefreshing,\n    data: trips,\n    bounces: true,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: function renderItem(itemData) {\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          props.navigation.navigate(\"MainMenu\", {\n            trip: itemData.item\n          });\n        },\n        onLongPress: function onLongPress(trip) {\n          longPressHandler(itemData.item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }\n      }, React.createElement(Animatable.View, {\n        animation: \"bounceInLeft\",\n        iterationCount: 1,\n        easing: \"linear\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      }, React.createElement(Card, {\n        style: styles.cartItem,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }\n      }, React.createElement(Animatable.Text, {\n        style: styles.title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }\n      }, itemData.item.name), React.createElement(Text, {\n        style: styles.dateText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      }, Moment(itemData.item.tripBeginning).format(\"DD.MM.YYYY\"), \" \", \"-\", \" \", Moment(itemData.item.tripEnding).format(\"DD.MM.YYYY\")), React.createElement(Text, {\n        style: styles.destination,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }\n      }, itemData.item.destination))));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }));\n};\n\ntripListScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: \"Your Trips\",\n    headerLeft: function headerLeft() {\n      return React.createElement(HeaderButtons, {\n        HeaderButtonComponent: HeaderButton,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 7\n        }\n      }, React.createElement(Item, {\n        buttonStyle: {\n          color: \"#147efb\"\n        },\n        title: \"Menu\",\n        iconName: Platform.OS === \"android\" ? \"md-menu\" : \"ios-menu\",\n        onPress: function onPress() {\n          navData.navigation.toggleDrawer();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }\n      }));\n    },\n    headerRight: function headerRight() {\n      return React.createElement(HeaderButtons, {\n        HeaderButtonComponent: HeaderButton,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 7\n        }\n      }, React.createElement(Item, {\n        buttonStyle: {\n          color: \"#147efb\"\n        },\n        title: \"Add\",\n        iconName: \"ios-add-circle-outline\",\n        onPress: function onPress() {\n          navData.navigation.navigate(\"TripDestination\", {\n            trip: -1\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }\n      }));\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    backgroundColor: \"#2C2C2E\"\n  },\n  cartItem: {\n    padding: 10,\n    backgroundColor: \"black\",\n    justifyContent: \"flex-start\",\n    marginHorizontal: 20,\n    marginTop: 20,\n    minHeight: 120,\n    flex: 1,\n    flexDirection: \"column\"\n  },\n  title: {\n    textTransform: \"uppercase\",\n    fontSize: 27,\n    fontWeight: \"bold\",\n    letterSpacing: 1,\n    padding: 5,\n    color: \"white\"\n  },\n  dateText: {\n    fontSize: 17,\n    letterSpacing: 1,\n    padding: 5,\n    color: \"#F2F2F7\"\n  },\n  destination: {\n    fontSize: 17,\n    letterSpacing: 1,\n    fontWeight: \"bold\",\n    paddingLeft: 5,\n    color: \"#F2F2F7\"\n  }\n});\nexport default tripListScreen;","map":{"version":3,"sources":["/Users/szymongruszczynski/Documents/INZYNIERKA/repo_dir/trip-organizer/trip-organizer-rn-app/screens/trip/tripListScreen.js"],"names":["React","useState","useCallback","useEffect","useDispatch","useSelector","Card","HeaderButtons","Item","HeaderButton","TouchableOpacity","Colors","Moment","Animatable","tripActions","tripListScreen","props","isLoading","setIsLoading","isRefreshing","setIsRefreshing","error","setError","trips","state","userTrips","dispatch","longPressHandler","trip","Alert","alert","name","text","style","onPress","console","log","deleteTrip","id","navigation","navigate","loadTrips","getTrips","message","willFocusSub","addListener","remove","then","styles","centered","length","screen","item","itemData","cartItem","title","dateText","tripBeginning","format","tripEnding","destination","navigationOptions","navData","headerTitle","headerLeft","color","Platform","OS","toggleDrawer","headerRight","StyleSheet","create","backgroundColor","padding","justifyContent","marginHorizontal","marginTop","minHeight","flex","flexDirection","textTransform","fontSize","fontWeight","letterSpacing","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  FlatList,\n  Text,\n  View,\n  StyleSheet,\n  Alert,\n  RefreshControl,\n  Button,\n} from \"react-native\";\nimport Card from \"../../components/technical/Card\";\nimport { HeaderButtons, Item } from \"react-navigation-header-buttons\";\nimport HeaderButton from \"../../components/technical/HeaderButton\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport Colors from \"../../constants/Colors\";\nimport Moment from \"moment\";\n\nimport * as Animatable from \"react-native-animatable\";\nimport * as tripActions from \"../../store/actions/trips\";\n\nconst tripListScreen = (props) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [error, setError] = useState();\n  const trips = useSelector((state) => state.trips.userTrips);\n  const dispatch = useDispatch();\n\n  const longPressHandler = (trip) => {\n    Alert.alert(trip.name, \"What do you want to do with?\", [\n      {\n        text: \"Delete\",\n        style: \"destructive\",\n        onPress: () => {\n          console.log(\"Deleting\");\n          console.log(trip);\n          dispatch(tripActions.deleteTrip(trip.id));\n        },\n      },\n      {\n        text: \"Edit\",\n        style: \"default\",\n        onPress: () => {\n          console.log(\"Editing\");\n          props.navigation.navigate(\"TripDestination\", {\n            trip: trip,\n          });\n        },\n      },\n      {\n        text: \"Cancel\",\n        style: \"cancel\",\n        onPress: () => {\n          console.log(\"Editing\");\n        },\n      },\n    ]);\n  };\n\n  const loadTrips = useCallback(async () => {\n    setError(null);\n    setIsRefreshing(true);\n    try {\n      await dispatch(tripActions.getTrips());\n    } catch (err) {\n      setError(err.message);\n    }\n    setIsRefreshing(false);\n  }, [dispatch, setIsLoading, setError]);\n\n  useEffect(() => {\n    const willFocusSub = props.navigation.addListener(\"willFocus\", loadTrips);\n\n    return () => {\n      willFocusSub.remove();\n    };\n  }, [loadTrips]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    loadTrips().then(() => {\n      setIsLoading(false);\n    });\n  }, [dispatch, loadTrips]);\n\n  if (error) {\n    return (\n      <View style={styles.centered}>\n        <Text>An error occurred!</Text>\n        <Text>{error}</Text>\n        <Button title=\"Try again\" onPress={loadTrips} color=\"red\" />\n      </View>\n    );\n  }\n\n  if (!isLoading && trips.length === 0) {\n    return (\n      <View style={styles.centered}>\n        <Text>No trips found. Maybe start adding some!</Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.screen}>\n      <FlatList\n        onRefresh={loadTrips}\n        refreshControl={\n          <RefreshControl\n            refreshing={isRefreshing}\n            onRefresh={loadTrips}\n            tintColor=\"#F2F2F7\"\n          />\n        }\n        refreshing={isRefreshing}\n        data={trips}\n        bounces={true}\n        keyExtractor={(item) => item.id}\n        renderItem={(itemData) => (\n          <TouchableOpacity\n            onPress={() => {\n              props.navigation.navigate(\"MainMenu\", {\n                trip: itemData.item,\n              });\n            }}\n            onLongPress={(trip) => {\n              // console.log(\"onLongPress: trip: \", itemData.item);\n              // setEditMode(true);\n              longPressHandler(itemData.item);\n            }}\n          >\n            <Animatable.View\n              animation=\"bounceInLeft\"\n              iterationCount={1}\n              easing=\"linear\"\n            >\n              <Card style={styles.cartItem}>\n                <Animatable.Text style={styles.title}>\n                  {itemData.item.name}\n                </Animatable.Text>\n                <Text style={styles.dateText}>\n                  {Moment(itemData.item.tripBeginning)\n                    // .utcOffset(-1)\n                    .format(\"DD.MM.YYYY\")}{\" \"}\n                  -{\" \"}\n                  {Moment(itemData.item.tripEnding)\n                    // .utcOffset(-1)\n                    .format(\"DD.MM.YYYY\")}\n                </Text>\n                <Text style={styles.destination}>\n                  {itemData.item.destination}\n                </Text>\n              </Card>\n            </Animatable.View>\n          </TouchableOpacity>\n        )}\n      />\n    </View>\n  );\n};\n\ntripListScreen.navigationOptions = (navData) => {\n  return {\n    headerTitle: \"Your Trips\",\n    headerLeft: () => (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          buttonStyle={{ color: \"#147efb\" }}\n          title=\"Menu\"\n          iconName={Platform.OS === \"android\" ? \"md-menu\" : \"ios-menu\"}\n          onPress={() => {\n            navData.navigation.toggleDrawer();\n          }}\n        />\n      </HeaderButtons>\n    ),\n    headerRight: () => (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          buttonStyle={{ color: \"#147efb\" }}\n          title=\"Add\"\n          // iconName={isEditMode ? \"ios-save\" : \"ios-add\"}\n          iconName=\"ios-add-circle-outline\"\n          onPress={() => {\n            navData.navigation.navigate(\"TripDestination\", { trip: -1 });\n          }}\n        />\n      </HeaderButtons>\n    ),\n  };\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    backgroundColor: \"#2C2C2E\",\n  },\n  cartItem: {\n    padding: 10,\n    backgroundColor: \"black\",\n    // flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    marginHorizontal: 20,\n    marginTop: 20,\n    minHeight: 120,\n    flex: 1,\n    flexDirection: \"column\",\n  },\n  title: {\n    textTransform: \"uppercase\",\n    fontSize: 27,\n    fontWeight: \"bold\",\n    letterSpacing: 1,\n    padding: 5,\n    color: \"white\",\n  },\n  dateText: {\n    fontSize: 17,\n    letterSpacing: 1,\n    padding: 5,\n    color: \"#F2F2F7\",\n  },\n  destination: {\n    fontSize: 17,\n    letterSpacing: 1,\n    fontWeight: \"bold\",\n    paddingLeft: 5,\n    color: \"#F2F2F7\",\n  },\n});\n\nexport default tripListScreen;\n"]},"metadata":{},"sourceType":"module"}
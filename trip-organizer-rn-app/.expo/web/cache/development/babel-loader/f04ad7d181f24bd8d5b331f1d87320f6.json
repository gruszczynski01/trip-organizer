{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/szymongruszczynski/Documents/INZYNIERKA/repo_dir/trip-organizer/trip-organizer-rn-app/screens/features/trip_timeline/eventDataScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useReducer, useCallback, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Card from \"../../../components/technical/Card\";\nimport Input from \"../../../components/technical/Input\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { HeaderButtons, Item } from \"react-navigation-header-buttons\";\nimport HeaderButton from \"../../../components/technical/HeaderButton\";\nimport * as eventActions from \"../../../store/actions/events\";\nimport Moment from \"moment\";\nvar FORM_INPUT_UPDATE = \"FORM_INPUT_UPDATE\";\n\nvar formReducer = function formReducer(state, action) {\n  if (action.type === FORM_INPUT_UPDATE) {\n    var updatedValues = _objectSpread(_objectSpread({}, state.inputValues), {}, _defineProperty({}, action.input, action.value));\n\n    var updatedValidities = _objectSpread(_objectSpread({}, state.inputValidities), {}, _defineProperty({}, action.input, action.isValid));\n\n    var updatedFormIsValid = true;\n\n    for (var key in updatedValidities) {\n      updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\n    }\n\n    return {\n      formIsValid: updatedFormIsValid,\n      inputValidities: updatedValidities,\n      inputValues: updatedValues\n    };\n  }\n\n  return state;\n};\n\nvar eventDataScreen = function eventDataScreen(props) {\n  var dispatch = useDispatch();\n  var trip = props.navigation.getParam(\"trip\");\n  var event = props.navigation.getParam(\"event\");\n  var editedEvent = null;\n\n  if (event != -1) {\n    editedEvent = useSelector(function (state) {\n      return state.events.tripEvents.find(function (eventElem) {\n        return eventElem.id === event.id;\n      });\n    });\n  }\n\n  var _useReducer = useReducer(formReducer, {\n    inputValues: {\n      title: editedEvent ? editedEvent.title : \"\",\n      desc: editedEvent ? editedEvent.description : \"\"\n    },\n    inputValidities: {\n      title: editedEvent ? true : false,\n      desc: editedEvent ? true : false\n    },\n    formIsValid: editedEvent ? true : false\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      formState = _useReducer2[0],\n      dispatchFormState = _useReducer2[1];\n\n  var inputChangeHandler = useCallback(function (inputIdentifier, inputValue, inputValidity) {\n    dispatchFormState({\n      type: FORM_INPUT_UPDATE,\n      value: inputValue,\n      isValid: inputValidity,\n      input: inputIdentifier\n    });\n  }, [dispatchFormState]);\n  var submitHandler = useCallback(function _callee() {\n    var body;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            body = _objectSpread(_objectSpread({}, props.navigation.state.params), {}, {\n              title: formState.inputValues.title,\n              description: formState.inputValues.desc\n            });\n            console.log(\"DEBUG: SUBMIT HANDLER\");\n            console.log(body);\n\n            if (!editedEvent) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(dispatch(eventActions.editEvent(editedEvent.id, body.title, body.description, Moment(body.date).format(\"DD-MM-YYYY\"), Moment(body.date).format(\"HH:mm\"))));\n\n          case 6:\n            _context.next = 10;\n            break;\n\n          case 8:\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(dispatch(eventActions.addEvent(body.title, body.description, Moment(body.date).format(\"DD-MM-YYYY\"), Moment(body.date).format(\"HH:mm\"), trip.id)));\n\n          case 10:\n            props.navigation.navigate(\"TripTimeline\", {\n              trip: trip\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [dispatch, editedEvent, formState]);\n  useEffect(function () {\n    props.navigation.setParams({\n      submit: submitHandler\n    });\n  }, [submitHandler]);\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: \"padding\",\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.mainContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.cardContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, React.createElement(Card, {\n    style: styles.card,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, React.createElement(Input, {\n    labelStyle: styles.input,\n    inputStyle: styles.inputStyle,\n    id: \"title\",\n    label: \"Title\",\n    keyboardType: \"default\",\n    required: true,\n    errorText: \"Please enter a valid title.\",\n    onInputChange: inputChangeHandler,\n    initialValue: editedEvent ? editedEvent.title : \"\",\n    initiallyValid: !!editedEvent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }), React.createElement(Input, {\n    labelStyle: styles.input,\n    inputStyle: styles.inputStyle,\n    style: styles.input,\n    id: \"desc\",\n    label: \"Description\",\n    keyboardType: \"default\",\n    required: true,\n    errorText: \"Please enter a valid description.\",\n    multiline: true,\n    umberOfLines: 4,\n    onInputChange: inputChangeHandler,\n    initialValue: editedEvent ? editedEvent.description : \"\",\n    initiallyValid: !!editedEvent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }))))));\n};\n\neventDataScreen.navigationOptions = function (navData) {\n  var submitFn = navData.navigation.getParam(\"submit\");\n  return {\n    headerTitle: \"Add new event\",\n    headerRight: function headerRight() {\n      return React.createElement(HeaderButtons, {\n        HeaderButtonComponent: HeaderButton,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 7\n        }\n      }, React.createElement(Item, {\n        buttonStyle: {\n          color: \"#147efb\"\n        },\n        title: \"Add\",\n        iconName: \"ios-save\",\n        onPress: submitFn,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }\n      }));\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  mainContainer: {\n    width: \"100%\",\n    marginTop: 30\n  },\n  screen: {\n    flex: 1,\n    justifyContent: \"flex-start\",\n    alignContent: \"center\",\n    backgroundColor: \"#2C2C2E\"\n  },\n  title: {\n    textTransform: \"uppercase\",\n    fontSize: 45,\n    fontWeight: \"bold\",\n    letterSpacing: 1,\n    margin: 30,\n    color: \"white\"\n  },\n  input: {\n    color: \"#F2F2F7\"\n  },\n  inputStyle: {\n    color: \"#F2F2F7\"\n  },\n  cardContainer: {\n    alignItems: \"center\"\n  },\n  card: {\n    width: \"90%\",\n    maxHeight: 400,\n    padding: 20,\n    backgroundColor: \"black\"\n  }\n});\nexport default eventDataScreen;","map":{"version":3,"sources":["/Users/szymongruszczynski/Documents/INZYNIERKA/repo_dir/trip-organizer/trip-organizer-rn-app/screens/features/trip_timeline/eventDataScreen.js"],"names":["React","useState","useReducer","useCallback","useEffect","useDispatch","useSelector","Card","Input","DateTimePicker","HeaderButtons","Item","HeaderButton","eventActions","Moment","FORM_INPUT_UPDATE","formReducer","state","action","type","updatedValues","inputValues","input","value","updatedValidities","inputValidities","isValid","updatedFormIsValid","key","formIsValid","eventDataScreen","props","dispatch","trip","navigation","getParam","event","editedEvent","events","tripEvents","find","eventElem","id","title","desc","description","formState","dispatchFormState","inputChangeHandler","inputIdentifier","inputValue","inputValidity","submitHandler","body","params","console","log","editEvent","date","format","addEvent","navigate","setParams","submit","styles","screen","mainContainer","cardContainer","card","inputStyle","navigationOptions","navData","submitFn","headerTitle","headerRight","color","StyleSheet","create","width","marginTop","flex","justifyContent","alignContent","backgroundColor","textTransform","fontSize","fontWeight","letterSpacing","margin","alignItems","maxHeight","padding"],"mappings":"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","sourcesContent":["import React, { useState, useReducer, useCallback, useEffect } from \"react\";\nimport {\n  Text,\n  View,\n  StyleSheet,\n  Button,\n  ScrollView,\n  KeyboardAvoidingView,\n} from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Card from \"../../../components/technical/Card\";\nimport Input from \"../../../components/technical/Input\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { HeaderButtons, Item } from \"react-navigation-header-buttons\";\nimport HeaderButton from \"../../../components/technical/HeaderButton\";\nimport * as eventActions from \"../../../store/actions/events\";\nimport Moment from \"moment\";\nconst FORM_INPUT_UPDATE = \"FORM_INPUT_UPDATE\";\n\nconst formReducer = (state, action) => {\n  if (action.type === FORM_INPUT_UPDATE) {\n    const updatedValues = {\n      ...state.inputValues,\n      [action.input]: action.value,\n    };\n    const updatedValidities = {\n      ...state.inputValidities,\n      [action.input]: action.isValid,\n    };\n    let updatedFormIsValid = true;\n    for (const key in updatedValidities) {\n      updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\n    }\n    return {\n      formIsValid: updatedFormIsValid,\n      inputValidities: updatedValidities,\n      inputValues: updatedValues,\n    };\n  }\n  return state;\n};\n\nconst eventDataScreen = (props) => {\n  const dispatch = useDispatch();\n\n  const trip = props.navigation.getParam(\"trip\");\n  const event = props.navigation.getParam(\"event\");\n  var editedEvent = null;\n  if (event != -1) {\n    editedEvent = useSelector((state) =>\n      state.events.tripEvents.find((eventElem) => eventElem.id === event.id)\n    );\n  }\n\n  const [formState, dispatchFormState] = useReducer(formReducer, {\n    inputValues: {\n      title: editedEvent ? editedEvent.title : \"\",\n      desc: editedEvent ? editedEvent.description : \"\",\n    },\n    inputValidities: {\n      title: editedEvent ? true : false,\n      desc: editedEvent ? true : false,\n    },\n    formIsValid: editedEvent ? true : false,\n  });\n\n  const inputChangeHandler = useCallback(\n    (inputIdentifier, inputValue, inputValidity) => {\n      dispatchFormState({\n        type: FORM_INPUT_UPDATE,\n        value: inputValue,\n        isValid: inputValidity,\n        input: inputIdentifier,\n      });\n    },\n    [dispatchFormState]\n  );\n\n  const submitHandler = useCallback(async () => {\n    var body = {\n      ...props.navigation.state.params,\n      title: formState.inputValues.title,\n      description: formState.inputValues.desc,\n    };\n\n    console.log(\"DEBUG: SUBMIT HANDLER\");\n    console.log(body);\n\n    // console.log(formState.inputValues.title);\n    // console.log(formState.inputValues.desc);\n    // console.log(Moment(props.navigation.state.params.).format(\"DD-MM-YYYY\"));\n    // console.log(Moment(date).format(\"HH:mm\"));\n\n    // const dispatch = useDispatch();\n\n    if (!!editedEvent) {\n      await dispatch(\n        eventActions.editEvent(\n          editedEvent.id,\n          body.title,\n          body.description,\n          Moment(body.date).format(\"DD-MM-YYYY\"),\n          Moment(body.date).format(\"HH:mm\")\n        )\n      );\n    } else {\n      await dispatch(\n        eventActions.addEvent(\n          body.title,\n          body.description,\n          Moment(body.date).format(\"DD-MM-YYYY\"),\n          Moment(body.date).format(\"HH:mm\"),\n          trip.id\n        )\n      );\n    }\n    props.navigation.navigate(\"TripTimeline\", { trip: trip });\n  }, [dispatch, editedEvent, formState]);\n\n  useEffect(() => {\n    props.navigation.setParams({ submit: submitHandler });\n  }, [submitHandler]);\n\n  return (\n    <KeyboardAvoidingView behavior=\"padding\" style={styles.screen}>\n      <View style={styles.mainContainer}>\n        <View style={styles.cardContainer}>\n          <Card style={styles.card}>\n            <ScrollView>\n              <Input\n                labelStyle={styles.input}\n                inputStyle={styles.inputStyle}\n                id=\"title\"\n                label=\"Title\"\n                keyboardType=\"default\"\n                required\n                errorText=\"Please enter a valid title.\"\n                onInputChange={inputChangeHandler}\n                initialValue={editedEvent ? editedEvent.title : \"\"}\n                initiallyValid={!!editedEvent}\n              />\n\n              <Input\n                labelStyle={styles.input}\n                inputStyle={styles.inputStyle}\n                style={styles.input}\n                id=\"desc\"\n                label=\"Description\"\n                keyboardType=\"default\"\n                required\n                errorText=\"Please enter a valid description.\"\n                multiline={true}\n                umberOfLines={4}\n                onInputChange={inputChangeHandler}\n                initialValue={editedEvent ? editedEvent.description : \"\"}\n                initiallyValid={!!editedEvent}\n              />\n            </ScrollView>\n          </Card>\n        </View>\n      </View>\n    </KeyboardAvoidingView>\n  );\n};\n\neventDataScreen.navigationOptions = (navData) => {\n  const submitFn = navData.navigation.getParam(\"submit\");\n\n  return {\n    headerTitle: \"Add new event\",\n    headerRight: () => (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          buttonStyle={{ color: \"#147efb\" }}\n          title=\"Add\"\n          iconName=\"ios-save\"\n          onPress={submitFn}\n          //TO DO: save or edit event\n\n          // navData.navigation.goBack();\n        />\n      </HeaderButtons>\n    ),\n  };\n};\n\nconst styles = StyleSheet.create({\n  mainContainer: {\n    width: \"100%\",\n    marginTop: 30,\n    // alignItems: \"center\",\n  },\n\n  screen: {\n    flex: 1,\n    justifyContent: \"flex-start\",\n    alignContent: \"center\",\n    // alignItems: \"center\",\n    backgroundColor: \"#2C2C2E\",\n  },\n  title: {\n    textTransform: \"uppercase\",\n    fontSize: 45,\n    fontWeight: \"bold\",\n    letterSpacing: 1,\n    margin: 30,\n    color: \"white\",\n  },\n  input: { color: \"#F2F2F7\" },\n  inputStyle: { color: \"#F2F2F7\" },\n\n  cardContainer: { alignItems: \"center\" },\n  card: {\n    width: \"90%\",\n    // maxWidth: 400,\n    maxHeight: 400,\n    padding: 20,\n    // backgroundColor: \"#202022\",\n    backgroundColor: \"black\",\n  },\n});\n\nexport default eventDataScreen;\n"]},"metadata":{},"sourceType":"module"}
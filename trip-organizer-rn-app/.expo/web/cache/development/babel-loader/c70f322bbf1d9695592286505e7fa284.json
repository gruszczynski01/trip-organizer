{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/szymongruszczynski/Documents/INZYNIERKA/repo_dir/trip-organizer/trip-organizer-rn-app/App.js\";\nimport React, { useState } from \"react\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { AppLoading } from \"expo\";\nimport * as Font from \"expo-font\";\nimport ReduxThunk from \"redux-thunk\";\nimport authReducer from \"./store/reducers/auth\";\nimport eventsReducer from \"./store/reducers/events\";\nimport tasksReducer from \"./store/reducers/tasks\";\nimport toDoListReducer from \"./store/reducers/toDoList\";\nimport tripsReducer from \"./store/reducers/trips\";\nimport NavigationContainer from \"./navigation/NavigationContainer\";\nvar rootReducer = combineReducers({\n  auth: authReducer,\n  events: eventsReducer,\n  tasks: tasksReducer,\n  toDoList: toDoListReducer,\n  trips: tripsReducer\n});\nvar store = createStore(rootReducer, applyMiddleware(ReduxThunk));\n\nvar fetchFonts = function fetchFonts() {\n  return Font.loadAsync({\n    \"open-sans\": require(\"./assets/fonts/OpenSans-Regular.ttf\"),\n    \"open-sans-bold\": require(\"./assets/fonts/OpenSans-Bold.ttf\")\n  });\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontLoaded = _useState2[0],\n      setFontLoaded = _useState2[1];\n\n  if (!fontLoaded) {\n    return React.createElement(AppLoading, {\n      startAsync: fetchFonts,\n      onFinish: function onFinish() {\n        setFontLoaded(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/szymongruszczynski/Documents/INZYNIERKA/repo_dir/trip-organizer/trip-organizer-rn-app/App.js"],"names":["React","useState","createStore","combineReducers","applyMiddleware","Provider","AppLoading","Font","ReduxThunk","authReducer","eventsReducer","tasksReducer","toDoListReducer","tripsReducer","NavigationContainer","rootReducer","auth","events","tasks","toDoList","trips","store","fetchFonts","loadAsync","require","App","fontLoaded","setFontLoaded"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,OAAOC,WAAP;AACA,OAAOC,aAAP;AACA,OAAOC,YAAP;AACA,OAAOC,eAAP;AACA,OAAOC,YAAP;AACA,OAAOC,mBAAP;AAUA,IAAMC,WAAW,GAAGZ,eAAe,CAAC;AAClCa,EAAAA,IAAI,EAAEP,WAD4B;AAElCQ,EAAAA,MAAM,EAAEP,aAF0B;AAGlCQ,EAAAA,KAAK,EAAEP,YAH2B;AAIlCQ,EAAAA,QAAQ,EAAEP,eAJwB;AAKlCQ,EAAAA,KAAK,EAAEP;AAL2B,CAAD,CAAnC;AAQA,IAAMQ,KAAK,GAAGnB,WAAW,CAACa,WAAD,EAAcX,eAAe,CAACI,UAAD,CAA7B,CAAzB;;AAEA,IAAMc,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,SAAOf,IAAI,CAACgB,SAAL,CAAe;AACpB,iBAAaC,OAAO,uCADA;AAEpB,sBAAkBA,OAAO;AAFL,GAAf,CAAP;AAID,CALD;;AAOA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACQxB,QAAQ,CAAC,KAAD,CADhB;AAAA;AAAA,MACrByB,UADqB;AAAA,MACTC,aADS;;AAG5B,MAAI,CAACD,UAAL,EAAiB;AACf,WACE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAEJ,UADd;AAEE,MAAA,QAAQ,EAAE,oBAAM;AACdK,QAAAA,aAAa,CAAC,IAAD,CAAb;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD;;AAED,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import React, { useState } from \"react\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { AppLoading } from \"expo\";\nimport * as Font from \"expo-font\";\nimport ReduxThunk from \"redux-thunk\";\n\nimport authReducer from \"./store/reducers/auth\";\nimport eventsReducer from \"./store/reducers/events\";\nimport tasksReducer from \"./store/reducers/tasks\";\nimport toDoListReducer from \"./store/reducers/toDoList\";\nimport tripsReducer from \"./store/reducers/trips\";\nimport NavigationContainer from \"./navigation/NavigationContainer\";\n\n// firebase.auth().onAuthStateChanged((user) => {\n//   if (user != null) {\n//     console.log(\"We are authenticated now!\");\n//   }\n\n//   // Do other things\n// });\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  events: eventsReducer,\n  tasks: tasksReducer,\n  toDoList: toDoListReducer,\n  trips: tripsReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(ReduxThunk));\n\nconst fetchFonts = () => {\n  return Font.loadAsync({\n    \"open-sans\": require(\"./assets/fonts/OpenSans-Regular.ttf\"),\n    \"open-sans-bold\": require(\"./assets/fonts/OpenSans-Bold.ttf\"),\n  });\n};\n\nexport default function App() {\n  const [fontLoaded, setFontLoaded] = useState(false);\n\n  if (!fontLoaded) {\n    return (\n      <AppLoading\n        startAsync={fetchFonts}\n        onFinish={() => {\n          setFontLoaded(true);\n        }}\n      />\n    );\n  }\n\n  return (\n    <Provider store={store}>\n      <NavigationContainer />\n    </Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
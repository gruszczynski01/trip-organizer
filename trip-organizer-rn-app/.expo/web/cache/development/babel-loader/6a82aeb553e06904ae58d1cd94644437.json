{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/szymongruszczynski/Documents/INZYNIERKA/repo_dir/trip-organizer/trip-organizer-rn-app/screens/features/to_do_list/editTaskScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useReducer, useCallback, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Card from \"../../../components/technical/Card\";\nimport Input from \"../../../components/technical/Input\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { HeaderButtons, Item } from \"react-navigation-header-buttons\";\nimport HeaderButton from \"../../../components/technical/HeaderButton\";\nimport * as taskActions from \"../../../store/actions/tasks\";\nimport * as tripActions from \"../../../store/actions/trips\";\nimport Moment from \"moment\";\nvar FORM_INPUT_UPDATE = \"FORM_INPUT_UPDATE\";\n\nvar formReducer = function formReducer(state, action) {\n  if (action.type === FORM_INPUT_UPDATE) {\n    var updatedValues = _objectSpread(_objectSpread({}, state.inputValues), {}, _defineProperty({}, action.input, action.value));\n\n    var updatedValidities = _objectSpread(_objectSpread({}, state.inputValidities), {}, _defineProperty({}, action.input, action.isValid));\n\n    var updatedFormIsValid = true;\n\n    for (var key in updatedValidities) {\n      updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\n    }\n\n    return {\n      formIsValid: updatedFormIsValid,\n      inputValidities: updatedValidities,\n      inputValues: updatedValues\n    };\n  }\n\n  return state;\n};\n\nvar editTaskScreen = function editTaskScreen(props) {\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isRefreshing = _useState4[0],\n      setIsRefreshing = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      data = _useState8[0],\n      setData = _useState8[1];\n\n  var members = useSelector(function (state) {\n    return state.trips.tripMembers;\n  });\n  var loggedUserId = useSelector(function (state) {\n    return state.auth.userId;\n  });\n\n  var _useState9 = useState(loggedUserId),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedMember = _useState10[0],\n      setSelectedMember = _useState10[1];\n\n  var trip = props.navigation.getParam(\"trip\");\n  var task = props.navigation.getParam(\"task\");\n  var editedTask = null;\n\n  if (task != -1) {\n    editedTask = useSelector(function (state) {\n      return state.tasks.toDoListTasks.find(function (taskElem) {\n        return taskElem.id === task.id;\n      });\n    });\n  }\n\n  var _useReducer = useReducer(formReducer, {\n    inputValues: {\n      name: editedTask ? editedTask.name : \"\",\n      desc: editedTask ? editedTask.description : \"\"\n    },\n    inputValidities: {\n      name: editedTask ? true : false,\n      desc: editedTask ? true : false\n    },\n    formIsValid: editedTask ? true : false\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      formState = _useReducer2[0],\n      dispatchFormState = _useReducer2[1];\n\n  var inputChangeHandler = useCallback(function (inputIdentifier, inputValue, inputValidity) {\n    dispatchFormState({\n      type: FORM_INPUT_UPDATE,\n      value: inputValue,\n      isValid: inputValidity,\n      input: inputIdentifier\n    });\n  }, [dispatchFormState]);\n  var submitHandler = useCallback(function _callee() {\n    var body;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            body = _objectSpread(_objectSpread({}, props.navigation.state.params), {}, {\n              name: formState.inputValues.name,\n              description: formState.inputValues.desc,\n              owner: selectedMember\n            });\n            console.log(\"DEBUG: SUBMIT HANDLER\");\n            console.log(body);\n\n            if (!editedTask) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(dispatch(taskActions.editTask(editedTask.id, formState.inputValues.name, formState.inputValues.desc, editedTask.ifDone, selectedMember)));\n\n          case 6:\n            _context.next = 8;\n            break;\n\n          case 8:\n            props.navigation.goBack();\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [dispatch, editedTask, formState]);\n  useEffect(function () {\n    props.navigation.setParams({\n      submit: submitHandler\n    });\n  }, [submitHandler]);\n  var loadTripMembers = useCallback(function _callee2() {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setError(null);\n            setIsRefreshing(true);\n            _context2.prev = 2;\n            console.log(\"BEDE BRAL MEMBERSOW\");\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(dispatch(tripActions.getTripMembers(trip.id)));\n\n          case 6:\n            _context2.next = 12;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](2);\n            console.log(_context2.t0);\n            setError(_context2.t0.message);\n\n          case 12:\n            console.log(\"wzialem membersow\");\n            console.log(members);\n            setData();\n            setIsRefreshing(false);\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[2, 8]], Promise);\n  }, [dispatch, setIsLoading, setError]);\n  useEffect(function () {\n    var willFocusSub = props.navigation.addListener(\"willFocus\", loadTripMembers);\n    return function () {\n      willFocusSub.remove();\n    };\n  }, [loadTripMembers]);\n  useEffect(function () {\n    setIsLoading(true);\n    loadTripMembers().then(function () {\n      setIsLoading(false);\n    });\n  }, [dispatch, loadTripMembers]);\n  useEffect(function () {\n    if (!!editedTask) {\n      setSelectedMember(editedTask.owner);\n    }\n  }, []);\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: \"padding\",\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.mainContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.cardContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, React.createElement(Card, {\n    style: styles.card,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, React.createElement(Input, {\n    labelStyle: styles.input,\n    inputStyle: styles.inputStyle,\n    id: \"name\",\n    label: \"Name\",\n    keyboardType: \"default\",\n    required: true,\n    errorText: \"Please enter a valid name.\",\n    onInputChange: inputChangeHandler,\n    initialValue: editedTask ? editedTask.name : \"\",\n    initiallyValid: !!editedTask,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }), React.createElement(Input, {\n    labelStyle: styles.input,\n    inputStyle: styles.inputStyle,\n    style: styles.input,\n    id: \"desc\",\n    label: \"Description\",\n    keyboardType: \"default\",\n    required: true,\n    errorText: \"Please enter a valid description.\",\n    multiline: true,\n    umberOfLines: 4,\n    onInputChange: inputChangeHandler,\n    initialValue: editedTask ? editedTask.description : \"\",\n    initiallyValid: !!editedTask,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  })))), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, \"Choose the task's owner\")), React.createElement(View, {\n    style: styles.flatListContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    onRefresh: loadTripMembers,\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: isRefreshing,\n      onRefresh: loadTripMembers,\n      tintColor: \"#F2F2F7\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 15\n      }\n    }),\n    refreshing: isRefreshing,\n    data: members,\n    bounces: true,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: function renderItem(itemData) {\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          console.log(itemData);\n          setSelectedMember(itemData.item.id);\n        },\n        onLongPress: function onLongPress(trip) {},\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 17\n        }\n      }, React.createElement(Card, {\n        style: _objectSpread(_objectSpread({}, styles.cartItem), {}, {\n          borderColor: itemData.item.id == selectedMember ? \"#00D84D\" : \"black\",\n          borderWidth: 2\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: styles.contentContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 23\n        }\n      }, React.createElement(View, {\n        style: styles.nameContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.fullName,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 27\n        }\n      }, itemData.item.name, \" \", itemData.item.surname)))))));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }))));\n};\n\neditTaskScreen.navigationOptions = function (navData) {\n  var submitFn = navData.navigation.getParam(\"submit\");\n  return {\n    headerTitle: \"Add new Task\",\n    headerRight: function headerRight() {\n      return React.createElement(HeaderButtons, {\n        HeaderButtonComponent: HeaderButton,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 7\n        }\n      }, React.createElement(Item, {\n        buttonStyle: {\n          color: \"#147efb\"\n        },\n        title: \"Add\",\n        iconName: \"ios-save\",\n        onPress: submitFn,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 9\n        }\n      }));\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  mainContainer: {\n    flex: 1,\n    width: \"100%\",\n    marginTop: 30\n  },\n  screen: {\n    flex: 1,\n    justifyContent: \"flex-start\",\n    alignContent: \"center\",\n    backgroundColor: \"#2C2C2E\"\n  },\n  title: {\n    textTransform: \"uppercase\",\n    fontSize: 25,\n    fontWeight: \"bold\",\n    letterSpacing: 1,\n    margin: 30,\n    color: \"white\"\n  },\n  fullName: {\n    textTransform: \"uppercase\",\n    fontSize: 15,\n    fontWeight: \"bold\",\n    letterSpacing: 1,\n    color: \"white\"\n  },\n  input: {\n    color: \"#F2F2F7\"\n  },\n  inputStyle: {\n    color: \"#F2F2F7\"\n  },\n  cardContainer: {\n    alignItems: \"center\"\n  },\n  card: {\n    width: \"90%\",\n    maxHeight: 400,\n    padding: 20,\n    backgroundColor: \"black\"\n  },\n  cartItem: {\n    padding: 10,\n    backgroundColor: \"black\",\n    justifyContent: \"flex-start\",\n    alignItems: \"stretch\",\n    alignContent: \"stretch\",\n    marginHorizontal: 20,\n    marginTop: 20,\n    minHeight: 55,\n    flex: 1,\n    flexDirection: \"row\"\n  },\n  contentContainer: {\n    width: \"95%\",\n    justifyContent: \"center\",\n    alignContent: \"center\"\n  },\n  nameContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignContent: \"center\"\n  },\n  flatListContainer: {\n    flex: 1\n  }\n});\nexport default editTaskScreen;","map":{"version":3,"sources":["/Users/szymongruszczynski/Documents/INZYNIERKA/repo_dir/trip-organizer/trip-organizer-rn-app/screens/features/to_do_list/editTaskScreen.js"],"names":["React","useState","useReducer","useCallback","useEffect","useDispatch","useSelector","Card","Input","DateTimePicker","HeaderButtons","Item","HeaderButton","taskActions","tripActions","Moment","FORM_INPUT_UPDATE","formReducer","state","action","type","updatedValues","inputValues","input","value","updatedValidities","inputValidities","isValid","updatedFormIsValid","key","formIsValid","editTaskScreen","props","dispatch","isLoading","setIsLoading","isRefreshing","setIsRefreshing","error","setError","data","setData","members","trips","tripMembers","loggedUserId","auth","userId","selectedMember","setSelectedMember","trip","navigation","getParam","task","editedTask","tasks","toDoListTasks","find","taskElem","id","name","desc","description","formState","dispatchFormState","inputChangeHandler","inputIdentifier","inputValue","inputValidity","submitHandler","body","params","owner","console","log","editTask","ifDone","goBack","setParams","submit","loadTripMembers","getTripMembers","message","willFocusSub","addListener","remove","then","styles","screen","mainContainer","cardContainer","card","inputStyle","title","flatListContainer","item","itemData","cartItem","borderColor","borderWidth","contentContainer","nameContainer","fullName","surname","navigationOptions","navData","submitFn","headerTitle","headerRight","color","StyleSheet","create","flex","width","marginTop","justifyContent","alignContent","backgroundColor","textTransform","fontSize","fontWeight","letterSpacing","margin","alignItems","maxHeight","padding","marginHorizontal","minHeight","flexDirection"],"mappings":"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","sourcesContent":["import React, { useState, useReducer, useCallback, useEffect } from \"react\";\nimport {\n  Text,\n  View,\n  StyleSheet,\n  Button,\n  ScrollView,\n  KeyboardAvoidingView,\n  FlatList,\n  RefreshControl,\n  TouchableOpacity,\n  TouchableHighlight,\n  Touchable,\n  TouchableWithoutFeedback,\n} from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Card from \"../../../components/technical/Card\";\nimport Input from \"../../../components/technical/Input\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { HeaderButtons, Item } from \"react-navigation-header-buttons\";\nimport HeaderButton from \"../../../components/technical/HeaderButton\";\nimport * as taskActions from \"../../../store/actions/tasks\";\nimport * as tripActions from \"../../../store/actions/trips\";\nimport Moment from \"moment\";\nconst FORM_INPUT_UPDATE = \"FORM_INPUT_UPDATE\";\n\nconst formReducer = (state, action) => {\n  if (action.type === FORM_INPUT_UPDATE) {\n    const updatedValues = {\n      ...state.inputValues,\n      [action.input]: action.value,\n    };\n    const updatedValidities = {\n      ...state.inputValidities,\n      [action.input]: action.isValid,\n    };\n    let updatedFormIsValid = true;\n    for (const key in updatedValidities) {\n      updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\n    }\n    return {\n      formIsValid: updatedFormIsValid,\n      inputValidities: updatedValidities,\n      inputValues: updatedValues,\n    };\n  }\n  return state;\n};\n\nconst editTaskScreen = (props) => {\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [error, setError] = useState();\n\n  const [data, setData] = useState([]);\n\n  const members = useSelector((state) => state.trips.tripMembers);\n  const loggedUserId = useSelector((state) => state.auth.userId);\n  const [selectedMember, setSelectedMember] = useState(loggedUserId);\n  const trip = props.navigation.getParam(\"trip\");\n  const task = props.navigation.getParam(\"task\");\n\n  var editedTask = null;\n  if (task != -1) {\n    editedTask = useSelector((state) =>\n      state.tasks.toDoListTasks.find((taskElem) => taskElem.id === task.id)\n    );\n  }\n\n  const [formState, dispatchFormState] = useReducer(formReducer, {\n    inputValues: {\n      name: editedTask ? editedTask.name : \"\",\n      desc: editedTask ? editedTask.description : \"\",\n    },\n    inputValidities: {\n      name: editedTask ? true : false,\n      desc: editedTask ? true : false,\n    },\n    formIsValid: editedTask ? true : false,\n  });\n\n  const inputChangeHandler = useCallback(\n    (inputIdentifier, inputValue, inputValidity) => {\n      dispatchFormState({\n        type: FORM_INPUT_UPDATE,\n        value: inputValue,\n        isValid: inputValidity,\n        input: inputIdentifier,\n      });\n    },\n    [dispatchFormState]\n  );\n\n  const submitHandler = useCallback(async () => {\n    var body = {\n      ...props.navigation.state.params,\n      name: formState.inputValues.name,\n      description: formState.inputValues.desc,\n      owner: selectedMember,\n    };\n\n    console.log(\"DEBUG: SUBMIT HANDLER\");\n    console.log(body);\n\n    // // console.log(formState.inputValues.name);\n    // console.log(formState.inputValues.desc);\n    // console.log(Moment(props.navigation.state.params.).format(\"DD-MM-YYYY\"));\n    // console.log(Moment(date).format(\"HH:mm\"));\n\n    // const dispatch = useDispatch();\n\n    if (!!editedTask) {\n      await dispatch(\n        taskActions.editTask(\n          editedTask.id,\n          formState.inputValues.name,\n          formState.inputValues.desc,\n          editedTask.ifDone,\n          selectedMember\n        )\n      );\n    } else {\n      // await dispatch(\n      //   taskActions.addTask(\n      //     body.name,\n      //     body.description,\n      //     Moment(body.date).format(\"DD-MM-YYYY\"),\n      //     Moment(body.date).format(\"HH:mm\"),\n      //     trip.id\n      //   )\n      // );\n    }\n    props.navigation.goBack();\n  }, [dispatch, editedTask, formState]);\n\n  useEffect(() => {\n    props.navigation.setParams({ submit: submitHandler });\n  }, [submitHandler]);\n\n  // trip members\n\n  const loadTripMembers = useCallback(async () => {\n    setError(null);\n    setIsRefreshing(true);\n    try {\n      console.log(\"BEDE BRAL MEMBERSOW\");\n      await dispatch(tripActions.getTripMembers(trip.id));\n    } catch (err) {\n      console.log(err);\n      setError(err.message);\n    }\n    console.log(\"wzialem membersow\");\n    console.log(members);\n\n    setData();\n    setIsRefreshing(false);\n  }, [dispatch, setIsLoading, setError]);\n\n  useEffect(() => {\n    const willFocusSub = props.navigation.addListener(\n      \"willFocus\",\n      loadTripMembers\n    );\n\n    return () => {\n      willFocusSub.remove();\n    };\n  }, [loadTripMembers]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    loadTripMembers().then(() => {\n      setIsLoading(false);\n    });\n  }, [dispatch, loadTripMembers]);\n\n  useEffect(() => {\n    if (!!editedTask) {\n      setSelectedMember(editedTask.owner);\n    }\n  }, []);\n  return (\n    <KeyboardAvoidingView behavior=\"padding\" style={styles.screen}>\n      <View style={styles.mainContainer}>\n        <View style={styles.cardContainer}>\n          <Card style={styles.card}>\n            <ScrollView>\n              <Input\n                labelStyle={styles.input}\n                inputStyle={styles.inputStyle}\n                id=\"name\"\n                label=\"Name\"\n                keyboardType=\"default\"\n                required\n                errorText=\"Please enter a valid name.\"\n                onInputChange={inputChangeHandler}\n                initialValue={editedTask ? editedTask.name : \"\"}\n                initiallyValid={!!editedTask}\n              />\n\n              <Input\n                labelStyle={styles.input}\n                inputStyle={styles.inputStyle}\n                style={styles.input}\n                id=\"desc\"\n                label=\"Description\"\n                keyboardType=\"default\"\n                required\n                errorText=\"Please enter a valid description.\"\n                multiline={true}\n                umberOfLines={4}\n                onInputChange={inputChangeHandler}\n                initialValue={editedTask ? editedTask.description : \"\"}\n                initiallyValid={!!editedTask}\n              />\n            </ScrollView>\n          </Card>\n        </View>\n        <View>\n          <Text style={styles.title}>Choose the task's owner</Text>\n        </View>\n        <View style={styles.flatListContainer}>\n          <FlatList\n            onRefresh={loadTripMembers}\n            refreshControl={\n              <RefreshControl\n                refreshing={isRefreshing}\n                onRefresh={loadTripMembers}\n                tintColor=\"#F2F2F7\"\n              />\n            }\n            refreshing={isRefreshing}\n            data={members}\n            bounces={true}\n            keyExtractor={(item) => item.id}\n            renderItem={(itemData) => (\n              <View>\n                <TouchableOpacity\n                  onPress={() => {\n                    console.log(itemData);\n                    setSelectedMember(itemData.item.id);\n                  }}\n                  onLongPress={(trip) => {\n                    // console.log(\"onLongPress: trip: \", itemData.item);\n                    // setEditMode(true);\n                    // longPressHandler(itemData.item);\n                  }}\n                  // animation=\"bounceInLeft\"\n                  // iterationCount={1}\n                  // easing=\"linear\"\n                >\n                  <Card\n                    style={{\n                      ...styles.cartItem,\n                      borderColor:\n                        itemData.item.id == selectedMember\n                          ? \"#00D84D\"\n                          : \"black\",\n                      borderWidth: 2,\n                    }}\n                  >\n                    <View style={styles.contentContainer}>\n                      <View>\n                        <View style={styles.nameContainer}>\n                          <Text style={styles.fullName}>\n                            {itemData.item.name} {itemData.item.surname}\n                          </Text>\n                        </View>\n                      </View>\n                    </View>\n                  </Card>\n                </TouchableOpacity>\n              </View>\n            )}\n          />\n        </View>\n      </View>\n    </KeyboardAvoidingView>\n  );\n};\n\neditTaskScreen.navigationOptions = (navData) => {\n  const submitFn = navData.navigation.getParam(\"submit\");\n\n  return {\n    headerTitle: \"Add new Task\",\n    headerRight: () => (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          buttonStyle={{ color: \"#147efb\" }}\n          title=\"Add\"\n          iconName=\"ios-save\"\n          onPress={submitFn}\n          //TO DO: save or edit Task\n\n          // navData.navigation.goBack();\n        />\n      </HeaderButtons>\n    ),\n  };\n};\n\nconst styles = StyleSheet.create({\n  mainContainer: {\n    flex: 1,\n    width: \"100%\",\n    marginTop: 30,\n    // alignItems: \"center\",\n  },\n\n  screen: {\n    flex: 1,\n    justifyContent: \"flex-start\",\n    alignContent: \"center\",\n    // alignItems: \"center\",\n    backgroundColor: \"#2C2C2E\",\n  },\n  title: {\n    textTransform: \"uppercase\",\n    fontSize: 25,\n    fontWeight: \"bold\",\n    letterSpacing: 1,\n    margin: 30,\n    color: \"white\",\n  },\n  fullName: {\n    textTransform: \"uppercase\",\n    fontSize: 15,\n    fontWeight: \"bold\",\n    letterSpacing: 1,\n    // margin: 30,\n    color: \"white\",\n  },\n  input: { color: \"#F2F2F7\" },\n  inputStyle: { color: \"#F2F2F7\" },\n  cardContainer: { alignItems: \"center\" },\n  card: {\n    width: \"90%\",\n    // maxWidth: 400,\n    maxHeight: 400,\n    padding: 20,\n    // backgroundColor: \"#202022\",\n    backgroundColor: \"black\",\n  },\n  cartItem: {\n    padding: 10,\n    backgroundColor: \"black\",\n    // flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"stretch\",\n    alignContent: \"stretch\",\n    marginHorizontal: 20,\n    marginTop: 20,\n    minHeight: 55,\n    flex: 1,\n    flexDirection: \"row\",\n  },\n\n  contentContainer: {\n    width: \"95%\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n  },\n  nameContainer: {\n    flex: 1,\n\n    justifyContent: \"center\",\n    alignContent: \"center\",\n  },\n  flatListContainer: {\n    flex: 1,\n  },\n});\n\nexport default editTaskScreen;\n"]},"metadata":{},"sourceType":"module"}
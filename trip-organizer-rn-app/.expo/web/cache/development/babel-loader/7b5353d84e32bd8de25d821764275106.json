{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/szymongruszczynski/Documents/INZYNIERKA/repo_dir/trip-organizer/trip-organizer-rn-app/screens/StartupScreen.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useDispatch } from \"react-redux\";\nimport Colors from \"../constants/Colors\";\nimport { auth, database } from \"../firebase\";\nimport * as authActions from \"../store/actions/auth\";\n\nvar StartupScreen = function StartupScreen(props) {\n  var dispatch = useDispatch();\n  console.log(\"StartUpScreen\");\n  useEffect(function () {\n    var tryLogin = function tryLogin() {\n      var userData, userDataJSON, transformedData, token, userId, expiryDate, expirationDate, expirationTime;\n      return _regeneratorRuntime.async(function tryLogin$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userData\"));\n\n            case 2:\n              userData = _context.sent;\n              userDataJSON = JSON.parse(userData);\n              console.log(\"UD: \");\n              console.log(userDataJSON);\n              console.log(userDataJSON.userId);\n              console.log(!!userDataJSON);\n\n              if (!!userDataJSON) {\n                _context.next = 11;\n                break;\n              }\n\n              props.navigation.navigate(\"Auth\");\n              return _context.abrupt(\"return\");\n\n            case 11:\n              transformedData = JSON.parse(userData);\n              token = transformedData.token, userId = transformedData.userId, expiryDate = transformedData.expiryDate;\n              expirationDate = new Date(expiryDate);\n\n              if (!(expirationDate <= new Date() || !token || !userId)) {\n                _context.next = 17;\n                break;\n              }\n\n              props.navigation.navigate(\"Auth\");\n              return _context.abrupt(\"return\");\n\n            case 17:\n              expirationTime = expirationDate.getTime() - new Date().getTime();\n              dispatch(authActions.authenticate(userId, token, expirationTime));\n              props.navigation.navigate(\"Drawer\");\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    tryLogin();\n  }, [dispatch]);\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: Colors.primary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\nexport default StartupScreen;","map":{"version":3,"sources":["/Users/szymongruszczynski/Documents/INZYNIERKA/repo_dir/trip-organizer/trip-organizer-rn-app/screens/StartupScreen.js"],"names":["React","useEffect","useState","AsyncStorage","useDispatch","Colors","auth","database","authActions","StartupScreen","props","dispatch","console","log","tryLogin","getItem","userData","userDataJSON","JSON","parse","userId","navigation","navigate","transformedData","token","expiryDate","expirationDate","Date","expirationTime","getTime","authenticate","styles","screen","primary","StyleSheet","create","flex","justifyContent","alignItems"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;SAKEC,Y;;AAGF,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,MAAP;AACA,SAASC,IAAT,EAAeC,QAAf;AACA,OAAO,KAAKC,WAAZ;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAEAZ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMa,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACQX,YAAY,CAACY,OAAb,CAAqB,UAArB,CADR;;AAAA;AACTC,cAAAA,QADS;AAETC,cAAAA,YAFS,GAEMC,IAAI,CAACC,KAAL,CAAWH,QAAX,CAFN;AAGfJ,cAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAYI,YAAZ;AACAL,cAAAA,OAAO,CAACC,GAAR,CAAYI,YAAY,CAACG,MAAzB;AACAR,cAAAA,OAAO,CAACC,GAAR,CAAY,CAAC,CAACI,YAAd;;AANe,kBAOV,CAAC,CAACA,YAPQ;AAAA;AAAA;AAAA;;AAebP,cAAAA,KAAK,CAACW,UAAN,CAAiBC,QAAjB,CAA0B,MAA1B;AAfa;;AAAA;AAmBTC,cAAAA,eAnBS,GAmBSL,IAAI,CAACC,KAAL,CAAWH,QAAX,CAnBT;AAoBPQ,cAAAA,KApBO,GAoBuBD,eApBvB,CAoBPC,KApBO,EAoBAJ,MApBA,GAoBuBG,eApBvB,CAoBAH,MApBA,EAoBQK,UApBR,GAoBuBF,eApBvB,CAoBQE,UApBR;AAqBTC,cAAAA,cArBS,GAqBQ,IAAIC,IAAJ,CAASF,UAAT,CArBR;;AAAA,oBAuBXC,cAAc,IAAI,IAAIC,IAAJ,EAAlB,IAAgC,CAACH,KAAjC,IAA0C,CAACJ,MAvBhC;AAAA;AAAA;AAAA;;AAwBbV,cAAAA,KAAK,CAACW,UAAN,CAAiBC,QAAjB,CAA0B,MAA1B;AAxBa;;AAAA;AA4BTM,cAAAA,cA5BS,GA4BQF,cAAc,CAACG,OAAf,KAA2B,IAAIF,IAAJ,GAAWE,OAAX,EA5BnC;AA8BflB,cAAAA,QAAQ,CAACH,WAAW,CAACsB,YAAZ,CAAyBV,MAAzB,EAAiCI,KAAjC,EAAwCI,cAAxC,CAAD,CAAR;AACAlB,cAAAA,KAAK,CAACW,UAAN,CAAiBC,QAAjB,CAA0B,QAA1B;;AA/Be;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB;;AAkCAR,IAAAA,QAAQ;AACT,GApCQ,EAoCN,CAACH,QAAD,CApCM,CAAT;AAsCA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEoB,MAAM,CAACC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAE3B,MAAM,CAAC4B,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAhDD;;AAkDA,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,MAAM,EAAE;AACNI,IAAAA,IAAI,EAAE,CADA;AAENC,IAAAA,cAAc,EAAE,QAFV;AAGNC,IAAAA,UAAU,EAAE;AAHN;AADuB,CAAlB,CAAf;AAQA,eAAe7B,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  ActivityIndicator,\n  StyleSheet,\n  AsyncStorage,\n  Text,\n} from \"react-native\";\nimport { useDispatch } from \"react-redux\";\n\nimport Colors from \"../constants/Colors\";\nimport { auth, database } from \"../firebase\";\nimport * as authActions from \"../store/actions/auth\";\n\nconst StartupScreen = (props) => {\n  const dispatch = useDispatch();\n\n  console.log(\"StartUpScreen\");\n\n  useEffect(() => {\n    const tryLogin = async () => {\n      const userData = await AsyncStorage.getItem(\"userData\");\n      const userDataJSON = JSON.parse(userData);\n      console.log(\"UD: \");\n      console.log(userDataJSON);\n      console.log(userDataJSON.userId);\n      console.log(!!userDataJSON);\n      if (!!!userDataJSON) {\n        // dispatch(\n        //   authActions.authenticate(\n        //     userDataJSON.userId,\n        //     userDataJSON.token,\n        //     userDataJSON.expirationTime\n        //   )\n        // );\n        props.navigation.navigate(\"Auth\");\n        return;\n      }\n\n      const transformedData = JSON.parse(userData);\n      const { token, userId, expiryDate } = transformedData;\n      const expirationDate = new Date(expiryDate);\n\n      if (expirationDate <= new Date() || !token || !userId) {\n        props.navigation.navigate(\"Auth\");\n        return;\n      }\n\n      const expirationTime = expirationDate.getTime() - new Date().getTime();\n\n      dispatch(authActions.authenticate(userId, token, expirationTime));\n      props.navigation.navigate(\"Drawer\");\n    };\n\n    tryLogin();\n  }, [dispatch]);\n\n  return (\n    <View style={styles.screen}>\n      <ActivityIndicator size=\"large\" color={Colors.primary} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n\nexport default StartupScreen;\n"]},"metadata":{},"sourceType":"module"}